/*
 * Copyright 2025 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.gradle.internal.buildconfiguration;

import org.gradle.api.UncheckedIOException;
import org.gradle.internal.util.PropertiesUtils;
import org.gradle.jvm.toolchain.JavaLanguageVersion;
import org.gradle.platform.BuildPlatform;
import org.gradle.util.internal.GFileUtils;
import org.jspecify.annotations.Nullable;

import java.io.File;
import java.io.IOException;
import java.net.URI;
import java.util.Map;
import java.util.Properties;

import static org.gradle.internal.buildconfiguration.DaemonJvmPropertiesUtils.getToolchainUrlPropertyForPlatform;

public class DaemonJvmPropertiesGenerator {

    public static void generate(
        File propertiesFile,
        JavaLanguageVersion toolchainVersion,
        @Nullable String toolchainVendor,
        boolean nativeImageCapable,
        Map<BuildPlatform, URI> downloadUrlsByPlatform
    ) {
        Properties daemonJvmProperties = new Properties();
        daemonJvmProperties.put(DaemonJvmPropertiesDefaults.TOOLCHAIN_VERSION_PROPERTY, toolchainVersion.toString());
        if (toolchainVendor != null) {
            daemonJvmProperties.put(DaemonJvmPropertiesDefaults.TOOLCHAIN_VENDOR_PROPERTY, toolchainVendor);
        }
        if (nativeImageCapable) {
            daemonJvmProperties.put(DaemonJvmPropertiesDefaults.TOOLCHAIN_NATIVE_IMAGE_CAPABLE_PROPERTY, "true");
        }

        downloadUrlsByPlatform.forEach((buildPlatform, uri) -> {
            String toolchainUrlProperty = getToolchainUrlPropertyForPlatform(buildPlatform);
            daemonJvmProperties.put(toolchainUrlProperty, uri.toString());
        });

        GFileUtils.parentMkdirs(propertiesFile);
        try {
            PropertiesUtils.store(daemonJvmProperties, propertiesFile, "This file is generated by updateDaemonJvm");
        } catch (IOException e) {
            throw new UncheckedIOException(e);
        }
    }
}
