// tag::avoid-this[]
abstract class GreetingTask extends DefaultTask {
    @Input
    abstract Property<String> getType()
    @OutputDirectory
    abstract DirectoryProperty getOutputDirectory()

    @TaskAction
    void run() {
        outputDirectory.get().file("${type.get()}.txt").asFile << "Hello" // <1>
    }
}

abstract class ConsumerTask extends DefaultTask {
    @InputDirectory
    abstract DirectoryProperty getInputDirectory()
    @OutputFile
    abstract RegularFileProperty getOutputFile()

    @TaskAction
    void run() {
        outputFile.get().asFile.write(inputDirectory.get().file("a.txt").asFile.text) // <2>
    }
}

def taskA = tasks.register("taskA", GreetingTask) {
    type = "a"
    outputDirectory = layout.buildDirectory.dir("shared") // <3>
}
tasks.register("taskB", GreetingTask) {
    type = "b"
    outputDirectory = layout.buildDirectory.dir("shared") // <4>
}
tasks.register("consumer", ConsumerTask) {
    inputDirectory = taskA.flatMap { it.outputDirectory }  // <5>
    outputFile = layout.buildDirectory.file("consumerOutput.txt")
}
// end::avoid-this[]
