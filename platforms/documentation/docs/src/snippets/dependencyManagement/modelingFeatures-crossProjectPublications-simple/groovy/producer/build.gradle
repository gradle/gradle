plugins {
    id 'java-library'
}

// tag::declare-outgoing-configuration[]
configurations {
    instrumentedJars {
        canBeConsumed = true
        canBeResolved = false
        // If you want this configuration to share the same dependencies, otherwise omit this line
        extendsFrom implementation, runtimeOnly
    }
}
// end::declare-outgoing-configuration[]

def instrumentedJar = tasks.register("instrumentedJar", Jar) {
    archiveClassifier = "instrumented"
}

// tag::attach-outgoing-artifact[]
artifacts {
    instrumentedJars(instrumentedJar)
}
// end::attach-outgoing-artifact[]

/*
// tag::attach-outgoing-artifact-explicit[]
artifacts {
    instrumentedJars(someTask.outputFile) {
        builtBy(someTask)
    }
}
// end::attach-outgoing-artifact-explicit[]
 */
