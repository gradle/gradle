// tag::type-declaration[]
@Managed interface MyComponent extends ComponentSpec {
    String getPublicData()
    void setPublicData(String data)
}
@Managed interface MyComponentInternal extends MyComponent {
    String getInternalData()
    void setInternalData(String internal)
}
// end::type-declaration[]

// tag::type-registration[]
// tag::internal-view-mutation[]
class MyPlugin extends RuleSource {
// end::internal-view-mutation[]
    @ComponentType
    void registerMyComponent(TypeBuilder<MyComponent> builder) {
        builder.internalView(MyComponentInternal)
    }
// end::type-registration[]
// tag::internal-view-mutation[]
    @Mutate
    void mutateMyComponents(ModelMap<MyComponentInternal> components) {
        components.all { component ->
            component.publicData = "Some PUBLIC data"
            component.internalData = "Some INTERNAL data"
        }
    }
// tag::type-registration[]
}
// end::type-registration[]
// end::internal-view-mutation[]

// tag::build-script[]
apply plugin: MyPlugin
model {
    components {
        my(MyComponent)
    }
}
// end::build-script[]
