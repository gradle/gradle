plugins {
    id 'java'
}
version = '1.0'

// tag::add-to-manifest[]
jar {
    manifest {
        attributes("Implementation-Title": "Gradle",
                   "Implementation-Version": archiveVersion)
    }
}
// end::add-to-manifest[]

// tag::custom-manifest[]
def sharedManifest = java.manifest {
    attributes("Implementation-Title": "Gradle",
               "Implementation-Version": version)
}
tasks.register('fooJar', Jar) {
    manifest = java.manifest {
        from sharedManifest
    }
}
// end::custom-manifest[]

// tag::merge[]
tasks.register('barJar', Jar) {
    manifest {
        attributes key1: 'value1'
        from sharedManifest, 'src/config/basemanifest.txt'
        from(['src/config/javabasemanifest.txt', 'src/config/libbasemanifest.txt']) {
            eachEntry { details ->
                if (details.baseValue != details.mergeValue) {
                    details.value = baseValue
                }
                if (details.key == 'foo') {
                    details.exclude()
                }
            }
        }
    }
}
// end::merge[]

// tag::write[]
tasks.named('jar') { manifest.writeTo(layout.buildDirectory.file('mymanifest.mf')) }
// end::write[]
