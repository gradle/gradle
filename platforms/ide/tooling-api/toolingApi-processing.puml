@startuml
box ":toolingApi side"
  participant ConsumerConnection
  participant ModelProducer
end box
box ":launcher side"
  participant DefaultConnection
  participant ProviderConnection
end box

ConsumerConnection -> ModelProducer: request
activate ModelProducer
ModelProducer -> DefaultConnection: request
note right
DefaultConnection has entry points to accept calls from different ToolingAPI versions
end note
DefaultConnection -> ProviderConnection: request
note right
request is funneled into ProviderConnection that is much simpler
end note
box "BuildActionExecuter chain in :launcher"
	participant LoggingBridging
	participant DaemonBuild
	participant DaemonClient
end box
ProviderConnection -> LoggingBridging: execute()
LoggingBridging -> DaemonBuild: execute()
note left
converts provider parameters to build action parameters
end note
DaemonBuild -> DaemonClient: execute()
note left
manages connection to daemon and communication using our own protocol
end note
activate DaemonClient

note right of DaemonClient
runs the build
end note
DaemonClient --> ModelProducer: result
deactivate DaemonClient
ModelProducer -> ModelProducer: adapt or convert\n retrieved model if needed
ModelProducer --> ConsumerConnection: result
deactivate ModelProducer
@enduml