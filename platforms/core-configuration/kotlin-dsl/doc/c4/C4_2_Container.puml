@startuml
!include lib/C4_Container.puml

LAYOUT_TOP_DOWN

title Container diagram for the Gradle Kotlin DSL

Person(dev, "Developer", "Developer using a Kotlin DSL based Gradle build")

System_Boundary(gradleBuildTool, "Gradle") {

    System_Ext(gradle, "Gradle Build Tool", "The Gradle Build Tool")

    System_Boundary(gradleKotlinDsl, "Gradle Kotlin DSL") {

        Container(provider, "Kotlin DSL Provider", "The core of the Gradle Kotlin DSL")
        Container(tapiBuilder, "IDE ToolingAPI Models", "Calculates script dependencies and error reporting for editors")
        Container(plugin, "`kotlin-dsl` Plugin", "Gradle Plugin to develop Kotlin-based projects that contribute build logic")
        Container(resolver, "Kotlin DSL Script Dependencies Resolver", "Loaded from IntelliJ Project Gradle version")

        Rel_U(tapiBuilder, provider, "Uses")
        Rel_Neighbor(plugin, provider, "Uses")
        Rel_Neighbor(resolver, tapiBuilder, "Uses", "TAPI")
    }

    Rel(gradle, provider, "Uses", "Script compilation")
    Rel(gradle, plugin, "Uses", "e.g. in `buildSrc`")
}

System_Boundary(ide, "IntelliJ IDE") {

    System_Ext(editor, ".gradle.kts script editor", "In IntelliJ IDEA or Android Studio")
    System_Ext(ideKotlin, "IntelliJ Kotlin Plugin", "for IDEA or Android Studio")

    Rel_Neighbor(editor, ideKotlin, "Uses")
}


System_Boundary(kotlinTools, "Kotlin Toolchain") {

    System_Ext(kgp, "Kotlin Gradle Plugin", "The `org.jetbrains.kotlin.jvm` Gradle plugin")
    System_Ext(kotlinc, "Kotlin Compiler", "kotlinc")

    Rel_Neighbor(kgp, kotlinc, "Uses", "Daemon")
}

System_Ext(buildCache, "Gradle Build Cache", "Local, Develocity Build Cache Node, etc...")

Rel(dev, gradle, "Uses", "Command Line")
Rel(dev, editor, "Uses", "GUI")

Rel(provider, kotlinc, "Uses", "Embedded")
Rel(plugin, kgp, "Applies")

Rel(ideKotlin, kotlinc, "Uses")
Rel(ideKotlin, resolver, "Loads", "Embedded")

Rel(provider, buildCache, "Uses")
Rel(kgp, buildCache, "Uses")

@enduml
