{
    "acceptedApiChanges": [
        {
            "type": "org.gradle.StartParameter",
            "member": "Method org.gradle.StartParameter.getBuildFile()",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.StartParameter",
            "member": "Method org.gradle.StartParameter.getSettingsFile()",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.StartParameter",
            "member": "Method org.gradle.StartParameter.setBuildFile(java.io.File)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.StartParameter",
            "member": "Method org.gradle.StartParameter.setSettingsFile(java.io.File)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.AntBuilder",
            "member": "Method org.gradle.api.AntBuilder.getProperties()",
            "acceptation": "Values of returned map can be null",
            "changes": [
                "From non-null returning to null returning breaking change"
            ]
        },
        {
            "type": "org.gradle.api.AntBuilder",
            "member": "Method org.gradle.api.AntBuilder.getReferences()",
            "acceptation": "Values of returned map can be null",
            "changes": [
                "From non-null returning to null returning breaking change"
            ]
        },
        {
            "type": "org.gradle.api.DefaultTask",
            "member": "Class org.gradle.api.DefaultTask",
            "acceptation": "removal convention",
            "changes": [
                "org.gradle.api.internal.AbstractTask.getConvention()"
            ]
        },
        {
            "type": "org.gradle.api.Project",
            "member": "Method org.gradle.api.Project.exec(groovy.lang.Closure)",
            "acceptation": "Remove deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.Project",
            "member": "Method org.gradle.api.Project.exec(org.gradle.api.Action)",
            "acceptation": "Remove deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.Project",
            "member": "Method org.gradle.api.Project.getConvention()",
            "acceptation": "Convention removal",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.Project",
            "member": "Method org.gradle.api.Project.getProperties()",
            "acceptation": "Values of returned map can be null",
            "changes": [
                "From non-null returning to null returning breaking change"
            ]
        },
        {
            "type": "org.gradle.api.Project",
            "member": "Method org.gradle.api.Project.javaexec(groovy.lang.Closure)",
            "acceptation": "Remove deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.Project",
            "member": "Method org.gradle.api.Project.javaexec(org.gradle.api.Action)",
            "acceptation": "Remove deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.Script",
            "member": "Method org.gradle.api.Script.exec(groovy.lang.Closure)",
            "acceptation": "Remove deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.Script",
            "member": "Method org.gradle.api.Script.exec(org.gradle.api.Action)",
            "acceptation": "Remove deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.Script",
            "member": "Method org.gradle.api.Script.javaexec(groovy.lang.Closure)",
            "acceptation": "Remove deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.Script",
            "member": "Method org.gradle.api.Script.javaexec(org.gradle.api.Action)",
            "acceptation": "Remove deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.Task",
            "member": "Method org.gradle.api.Task.getConvention()",
            "acceptation": "removal convention",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.Task$Namer",
            "member": "Class org.gradle.api.Task$Namer",
            "acceptation": "Removed deprecated class",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.api.Task$Namer",
            "member": "Constructor org.gradle.api.Task$Namer()",
            "acceptation": "Removed deprecated class",
            "changes": [
                "Constructor has been removed"
            ]
        },
        {
            "type": "org.gradle.api.Task$Namer",
            "member": "Method org.gradle.api.Task$Namer.determineName(org.gradle.api.Task)",
            "acceptation": "Removed deprecated class",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.ClientModule",
            "member": "Class org.gradle.api.artifacts.ClientModule",
            "acceptation": "Removed deprecated class",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.ClientModule",
            "member": "Method org.gradle.api.artifacts.ClientModule.addDependency(org.gradle.api.artifacts.ModuleDependency)",
            "acceptation": "Remove deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.ClientModule",
            "member": "Method org.gradle.api.artifacts.ClientModule.copy()",
            "acceptation": "Remove deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.ClientModule",
            "member": "Method org.gradle.api.artifacts.ClientModule.getDependencies()",
            "acceptation": "Remove deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.ClientModule",
            "member": "Method org.gradle.api.artifacts.ClientModule.getId()",
            "acceptation": "Remove deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.Configuration",
            "member": "Method org.gradle.api.artifacts.Configuration.fileCollection(groovy.lang.Closure)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.Configuration",
            "member": "Method org.gradle.api.artifacts.Configuration.fileCollection(org.gradle.api.artifacts.Dependency[])",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.Configuration",
            "member": "Method org.gradle.api.artifacts.Configuration.fileCollection(org.gradle.api.specs.Spec)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.Configuration",
            "member": "Method org.gradle.api.artifacts.Configuration.files(groovy.lang.Closure)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.Configuration",
            "member": "Method org.gradle.api.artifacts.Configuration.files(org.gradle.api.artifacts.Dependency[])",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.Configuration",
            "member": "Method org.gradle.api.artifacts.Configuration.files(org.gradle.api.specs.Spec)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.Configuration",
            "member": "Method org.gradle.api.artifacts.Configuration.getAll()",
            "acceptation": "Remove deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.Configuration",
            "member": "Method org.gradle.api.artifacts.Configuration.getUploadTaskName()",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.Configuration$Namer",
            "member": "Class org.gradle.api.artifacts.Configuration$Namer",
            "acceptation": "Removed deprecated class",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.Configuration$Namer",
            "member": "Constructor org.gradle.api.artifacts.Configuration$Namer()",
            "acceptation": "Removed deprecated class",
            "changes": [
                "Constructor has been removed"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.Configuration$Namer",
            "member": "Method org.gradle.api.artifacts.Configuration$Namer.determineName(org.gradle.api.artifacts.Configuration)",
            "acceptation": "Removed deprecated class",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.Dependency",
            "member": "Method org.gradle.api.artifacts.Dependency.contentEquals(org.gradle.api.artifacts.Dependency)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.LenientConfiguration",
            "member": "Method org.gradle.api.artifacts.LenientConfiguration.getArtifacts(org.gradle.api.specs.Spec)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.LenientConfiguration",
            "member": "Method org.gradle.api.artifacts.LenientConfiguration.getFiles()",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.LenientConfiguration",
            "member": "Method org.gradle.api.artifacts.LenientConfiguration.getFiles(org.gradle.api.specs.Spec)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.LenientConfiguration",
            "member": "Method org.gradle.api.artifacts.LenientConfiguration.getFirstLevelModuleDependencies(org.gradle.api.specs.Spec)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.ProjectDependency",
            "member": "Method org.gradle.api.artifacts.ProjectDependency.getDependencyProject()",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.ResolveException",
            "member": "Constructor org.gradle.api.artifacts.ResolveException(java.lang.String,java.lang.Iterable)",
            "acceptation": "Public consturctor was deprecated",
            "changes": [
                "Constructor is less accessible"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.ResolveException",
            "member": "Constructor org.gradle.api.artifacts.ResolveException(java.lang.String,java.lang.Throwable)",
            "acceptation": "Removed deprecated constructor",
            "changes": [
                "Constructor has been removed"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.ResolvedConfiguration",
            "member": "Method org.gradle.api.artifacts.ResolvedConfiguration.getFiles()",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.ResolvedConfiguration",
            "member": "Method org.gradle.api.artifacts.ResolvedConfiguration.getFiles(org.gradle.api.specs.Spec)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.ResolvedConfiguration",
            "member": "Method org.gradle.api.artifacts.ResolvedConfiguration.getFirstLevelModuleDependencies(org.gradle.api.specs.Spec)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.SelfResolvingDependency",
            "member": "Class org.gradle.api.artifacts.SelfResolvingDependency",
            "acceptation": "Deprecated class removed",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.SelfResolvingDependency",
            "member": "Method org.gradle.api.artifacts.SelfResolvingDependency.resolve()",
            "acceptation": "Deprecated method removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.SelfResolvingDependency",
            "member": "Method org.gradle.api.artifacts.SelfResolvingDependency.resolve(boolean)",
            "acceptation": "Deprecated method removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.component.BuildIdentifier",
            "member": "Method org.gradle.api.artifacts.component.BuildIdentifier.getName()",
            "acceptation": "Remove deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.component.BuildIdentifier",
            "member": "Method org.gradle.api.artifacts.component.BuildIdentifier.isCurrentBuild()",
            "acceptation": "Remove deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.component.ProjectComponentSelector",
            "member": "Method org.gradle.api.artifacts.component.ProjectComponentSelector.getBuildName()",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.dsl.DependencyHandler",
            "member": "Method org.gradle.api.artifacts.dsl.DependencyHandler.module(java.lang.Object)",
            "acceptation": "Remove deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.dsl.DependencyHandler",
            "member": "Method org.gradle.api.artifacts.dsl.DependencyHandler.module(java.lang.Object,groovy.lang.Closure)",
            "acceptation": "Remove deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.dsl.RepositoryHandler",
            "member": "Method org.gradle.api.artifacts.dsl.RepositoryHandler.jcenter()",
            "acceptation": "Remove deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.dsl.RepositoryHandler",
            "member": "Method org.gradle.api.artifacts.dsl.RepositoryHandler.jcenter(org.gradle.api.Action)",
            "acceptation": "Remove deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.transform.VariantTransformConfigurationException",
            "member": "Class org.gradle.api.artifacts.transform.VariantTransformConfigurationException",
            "acceptation": "Deprecated type removed in Gradle 9.0",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.transform.VariantTransformConfigurationException",
            "member": "Constructor org.gradle.api.artifacts.transform.VariantTransformConfigurationException(java.lang.String)",
            "acceptation": "Deprecated type removed in Gradle 9.0",
            "changes": [
                "Constructor has been removed"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.transform.VariantTransformConfigurationException",
            "member": "Constructor org.gradle.api.artifacts.transform.VariantTransformConfigurationException(java.lang.String,java.lang.Throwable)",
            "acceptation": "Deprecated type removed in Gradle 9.0",
            "changes": [
                "Constructor has been removed"
            ]
        },
        {
            "type": "org.gradle.api.file.CopyProcessingSpec",
            "member": "Method org.gradle.api.file.CopyProcessingSpec.getDirMode()",
            "acceptation": "API is being remove in Gradle 9.0",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.file.CopyProcessingSpec",
            "member": "Method org.gradle.api.file.CopyProcessingSpec.getFileMode()",
            "acceptation": "[API is being remove in Gradle 9.0]",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.file.CopyProcessingSpec",
            "member": "Method org.gradle.api.file.CopyProcessingSpec.setDirMode(java.lang.Integer)",
            "acceptation": "[API is being remove in Gradle 9.0]",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.file.CopyProcessingSpec",
            "member": "Method org.gradle.api.file.CopyProcessingSpec.setFileMode(java.lang.Integer)",
            "acceptation": "[API is being remove in Gradle 9.0]",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.file.FileCopyDetails",
            "member": "Method org.gradle.api.file.FileCopyDetails.setMode(int)",
            "acceptation": "[API is being remove in Gradle 9.0]",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.file.FileTreeElement",
            "member": "Method org.gradle.api.file.FileTreeElement.getMode()",
            "acceptation": "[API is being remove in Gradle 9.0]",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.file.RelativePath",
            "member": "Method org.gradle.api.file.RelativePath.getParent()",
            "acceptation": "Method can return null values",
            "changes": [
                "From non-null returning to null returning breaking change"
            ]
        },
        {
            "type": "org.gradle.api.plugins.ApplicationPlugin",
            "member": "Method org.gradle.api.plugins.ApplicationPlugin.getPropertyFactory()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.plugins.ApplicationPluginConvention",
            "member": "Class org.gradle.api.plugins.ApplicationPluginConvention",
            "acceptation": "Remove deprecated feature",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.ApplicationPluginConvention",
            "member": "Constructor org.gradle.api.plugins.ApplicationPluginConvention()",
            "acceptation": "Remove deprecated feature",
            "changes": [
                "Constructor has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.ApplicationPluginConvention",
            "member": "Method org.gradle.api.plugins.ApplicationPluginConvention.getApplicationDefaultJvmArgs()",
            "acceptation": "Remove deprecated feature",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.ApplicationPluginConvention",
            "member": "Method org.gradle.api.plugins.ApplicationPluginConvention.getApplicationDistribution()",
            "acceptation": "Remove deprecated feature",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.ApplicationPluginConvention",
            "member": "Method org.gradle.api.plugins.ApplicationPluginConvention.getApplicationName()",
            "acceptation": "Remove deprecated feature",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.ApplicationPluginConvention",
            "member": "Method org.gradle.api.plugins.ApplicationPluginConvention.getExecutableDir()",
            "acceptation": "Remove deprecated feature",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.ApplicationPluginConvention",
            "member": "Method org.gradle.api.plugins.ApplicationPluginConvention.getMainClassName()",
            "acceptation": "Remove deprecated feature",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.ApplicationPluginConvention",
            "member": "Method org.gradle.api.plugins.ApplicationPluginConvention.getProject()",
            "acceptation": "Remove deprecated feature",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.ApplicationPluginConvention",
            "member": "Method org.gradle.api.plugins.ApplicationPluginConvention.setApplicationDefaultJvmArgs(java.lang.Iterable)",
            "acceptation": "Remove deprecated feature",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.ApplicationPluginConvention",
            "member": "Method org.gradle.api.plugins.ApplicationPluginConvention.setApplicationDistribution(org.gradle.api.file.CopySpec)",
            "acceptation": "Remove deprecated feature",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.ApplicationPluginConvention",
            "member": "Method org.gradle.api.plugins.ApplicationPluginConvention.setApplicationName(java.lang.String)",
            "acceptation": "Remove deprecated feature",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.ApplicationPluginConvention",
            "member": "Method org.gradle.api.plugins.ApplicationPluginConvention.setExecutableDir(java.lang.String)",
            "acceptation": "Remove deprecated feature",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.ApplicationPluginConvention",
            "member": "Method org.gradle.api.plugins.ApplicationPluginConvention.setMainClassName(java.lang.String)",
            "acceptation": "Remove deprecated feature",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.BasePluginConvention",
            "member": "Class org.gradle.api.plugins.BasePluginConvention",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.BasePluginConvention",
            "member": "Constructor org.gradle.api.plugins.BasePluginConvention()",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Constructor has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.BasePluginConvention",
            "member": "Method org.gradle.api.plugins.BasePluginConvention.getArchivesBaseName()",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.BasePluginConvention",
            "member": "Method org.gradle.api.plugins.BasePluginConvention.getDistsDirName()",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.BasePluginConvention",
            "member": "Method org.gradle.api.plugins.BasePluginConvention.getDistsDirectory()",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.BasePluginConvention",
            "member": "Method org.gradle.api.plugins.BasePluginConvention.getLibsDirName()",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.BasePluginConvention",
            "member": "Method org.gradle.api.plugins.BasePluginConvention.getLibsDirectory()",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.BasePluginConvention",
            "member": "Method org.gradle.api.plugins.BasePluginConvention.setArchivesBaseName(java.lang.String)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.BasePluginConvention",
            "member": "Method org.gradle.api.plugins.BasePluginConvention.setDistsDirName(java.lang.String)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.BasePluginConvention",
            "member": "Method org.gradle.api.plugins.BasePluginConvention.setLibsDirName(java.lang.String)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.BasePluginExtension",
            "member": "Method org.gradle.api.plugins.BasePluginExtension.getArchivesBaseName()",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.BasePluginExtension",
            "member": "Method org.gradle.api.plugins.BasePluginExtension.getDistsDirName()",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.BasePluginExtension",
            "member": "Method org.gradle.api.plugins.BasePluginExtension.getLibsDirName()",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.BasePluginExtension",
            "member": "Method org.gradle.api.plugins.BasePluginExtension.setArchivesBaseName(java.lang.String)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.BasePluginExtension",
            "member": "Method org.gradle.api.plugins.BasePluginExtension.setDistsDirName(java.lang.String)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.BasePluginExtension",
            "member": "Method org.gradle.api.plugins.BasePluginExtension.setLibsDirName(java.lang.String)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.Convention",
            "member": "Class org.gradle.api.plugins.Convention",
            "acceptation": "Remove Convention",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.Convention",
            "member": "Method org.gradle.api.plugins.Convention.findPlugin(java.lang.Class)",
            "acceptation": "Remove Convention",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.Convention",
            "member": "Method org.gradle.api.plugins.Convention.getExtensionsAsDynamicObject()",
            "acceptation": "Remove Convention interface",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.Convention",
            "member": "Method org.gradle.api.plugins.Convention.getPlugin(java.lang.Class)",
            "acceptation": "remove convention",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.Convention",
            "member": "Method org.gradle.api.plugins.Convention.getPlugins()",
            "acceptation": "remove convention",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.HelpTasksPlugin",
            "member": "Field COMPONENTS_TASK",
            "acceptation": "This task is no longer associated with HelpTasksPlugin",
            "changes": [
                "Field has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.HelpTasksPlugin",
            "member": "Field DEPENDENT_COMPONENTS_TASK",
            "acceptation": "This task is no longer associated with HelpTasksPlugin",
            "changes": [
                "Field has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.JavaPluginConvention",
            "member": "Class org.gradle.api.plugins.JavaPluginConvention",
            "acceptation": "Removed deprecated feature",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.JavaPluginConvention",
            "member": "Constructor org.gradle.api.plugins.JavaPluginConvention()",
            "acceptation": "Removed deprecated feature",
            "changes": [
                "Constructor has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.JavaPluginConvention",
            "member": "Method org.gradle.api.plugins.JavaPluginConvention.disableAutoTargetJvm()",
            "acceptation": "Removed deprecated feature",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.JavaPluginConvention",
            "member": "Method org.gradle.api.plugins.JavaPluginConvention.getAutoTargetJvmDisabled()",
            "acceptation": "Removed deprecated feature",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.JavaPluginConvention",
            "member": "Method org.gradle.api.plugins.JavaPluginConvention.getDocsDir()",
            "acceptation": "Removed deprecated feature",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.JavaPluginConvention",
            "member": "Method org.gradle.api.plugins.JavaPluginConvention.getDocsDirName()",
            "acceptation": "Removed deprecated feature",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.JavaPluginConvention",
            "member": "Method org.gradle.api.plugins.JavaPluginConvention.getProject()",
            "acceptation": "Removed deprecated feature",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.JavaPluginConvention",
            "member": "Method org.gradle.api.plugins.JavaPluginConvention.getSourceCompatibility()",
            "acceptation": "Removed deprecated feature",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.JavaPluginConvention",
            "member": "Method org.gradle.api.plugins.JavaPluginConvention.getSourceSets()",
            "acceptation": "Removed deprecated feature",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.JavaPluginConvention",
            "member": "Method org.gradle.api.plugins.JavaPluginConvention.getTargetCompatibility()",
            "acceptation": "Removed deprecated feature",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.JavaPluginConvention",
            "member": "Method org.gradle.api.plugins.JavaPluginConvention.getTestReportDir()",
            "acceptation": "Removed deprecated feature",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.JavaPluginConvention",
            "member": "Method org.gradle.api.plugins.JavaPluginConvention.getTestReportDirName()",
            "acceptation": "Removed deprecated feature",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.JavaPluginConvention",
            "member": "Method org.gradle.api.plugins.JavaPluginConvention.getTestResultsDir()",
            "acceptation": "Removed deprecated feature",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.JavaPluginConvention",
            "member": "Method org.gradle.api.plugins.JavaPluginConvention.getTestResultsDirName()",
            "acceptation": "Removed deprecated feature",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.JavaPluginConvention",
            "member": "Method org.gradle.api.plugins.JavaPluginConvention.manifest()",
            "acceptation": "Removed deprecated feature",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.JavaPluginConvention",
            "member": "Method org.gradle.api.plugins.JavaPluginConvention.manifest(groovy.lang.Closure)",
            "acceptation": "Removed deprecated feature",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.JavaPluginConvention",
            "member": "Method org.gradle.api.plugins.JavaPluginConvention.manifest(org.gradle.api.Action)",
            "acceptation": "Removed deprecated feature",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.JavaPluginConvention",
            "member": "Method org.gradle.api.plugins.JavaPluginConvention.setDocsDirName(java.lang.String)",
            "acceptation": "Removed deprecated feature",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.JavaPluginConvention",
            "member": "Method org.gradle.api.plugins.JavaPluginConvention.setSourceCompatibility(java.lang.Object)",
            "acceptation": "Removed deprecated feature",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.JavaPluginConvention",
            "member": "Method org.gradle.api.plugins.JavaPluginConvention.setSourceCompatibility(org.gradle.api.JavaVersion)",
            "acceptation": "Removed deprecated feature",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.JavaPluginConvention",
            "member": "Method org.gradle.api.plugins.JavaPluginConvention.setTargetCompatibility(java.lang.Object)",
            "acceptation": "Removed deprecated feature",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.JavaPluginConvention",
            "member": "Method org.gradle.api.plugins.JavaPluginConvention.setTargetCompatibility(org.gradle.api.JavaVersion)",
            "acceptation": "Removed deprecated feature",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.JavaPluginConvention",
            "member": "Method org.gradle.api.plugins.JavaPluginConvention.setTestReportDirName(java.lang.String)",
            "acceptation": "Removed deprecated feature",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.JavaPluginConvention",
            "member": "Method org.gradle.api.plugins.JavaPluginConvention.setTestResultsDirName(java.lang.String)",
            "acceptation": "Removed deprecated feature",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.JavaPluginConvention",
            "member": "Method org.gradle.api.plugins.JavaPluginConvention.sourceSets(groovy.lang.Closure)",
            "acceptation": "Removed deprecated feature",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.ProjectReportsPluginConvention",
            "member": "Class org.gradle.api.plugins.ProjectReportsPluginConvention",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.ProjectReportsPluginConvention",
            "member": "Constructor org.gradle.api.plugins.ProjectReportsPluginConvention()",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Constructor has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.ProjectReportsPluginConvention",
            "member": "Method org.gradle.api.plugins.ProjectReportsPluginConvention.getProjectReportDir()",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.ProjectReportsPluginConvention",
            "member": "Method org.gradle.api.plugins.ProjectReportsPluginConvention.getProjectReportDirName()",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.ProjectReportsPluginConvention",
            "member": "Method org.gradle.api.plugins.ProjectReportsPluginConvention.getProjects()",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.ProjectReportsPluginConvention",
            "member": "Method org.gradle.api.plugins.ProjectReportsPluginConvention.setProjectReportDirName(java.lang.String)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.WarPlugin",
            "member": "Field WEB_APP_GROUP",
            "acceptation": "Removed deprecated constant.",
            "changes": [
                "Field has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.WarPlugin",
            "member": "Method org.gradle.api.plugins.WarPlugin.configureConfigurations(org.gradle.api.artifacts.ConfigurationContainer)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.WarPluginConvention",
            "member": "Class org.gradle.api.plugins.WarPluginConvention",
            "acceptation": "war plugin convention was deprecated",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.WarPluginConvention",
            "member": "Constructor org.gradle.api.plugins.WarPluginConvention()",
            "acceptation": "war plugin convention was deprecated",
            "changes": [
                "Constructor has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.WarPluginConvention",
            "member": "Method org.gradle.api.plugins.WarPluginConvention.getProject()",
            "acceptation": "war plugin convention was deprecated",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.WarPluginConvention",
            "member": "Method org.gradle.api.plugins.WarPluginConvention.getWebAppDir()",
            "acceptation": "war plugin convention was deprecated",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.WarPluginConvention",
            "member": "Method org.gradle.api.plugins.WarPluginConvention.getWebAppDirName()",
            "acceptation": "war plugin convention was deprecated",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.WarPluginConvention",
            "member": "Method org.gradle.api.plugins.WarPluginConvention.setWebAppDirName(java.lang.String)",
            "acceptation": "war plugin convention was deprecated",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.antlr.AntlrTask",
            "member": "Method org.gradle.api.plugins.antlr.AntlrTask.getDeleter()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.plugins.antlr.AntlrTask",
            "member": "Method org.gradle.api.plugins.antlr.AntlrTask.getProjectLayout()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.plugins.antlr.AntlrTask",
            "member": "Method org.gradle.api.plugins.antlr.AntlrTask.getWorkerProcessBuilderFactory()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.CheckstylePlugin",
            "member": "Method org.gradle.api.plugins.quality.CheckstylePlugin.getToolchainService()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.PmdPlugin",
            "member": "Method org.gradle.api.plugins.quality.PmdPlugin.getToolchainService()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.provider.Provider",
            "member": "Method org.gradle.api.provider.Provider.forUseAtConfigurationTime()",
            "acceptation": "Deprecated method removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.publish.ivy.tasks.GenerateIvyDescriptor",
            "member": "Method org.gradle.api.publish.ivy.tasks.GenerateIvyDescriptor.getFileResolver()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.publish.ivy.tasks.PublishToIvyRepository",
            "member": "Method org.gradle.api.publish.ivy.tasks.PublishToIvyRepository.getDuplicatePublicationTracker()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.publish.ivy.tasks.PublishToIvyRepository",
            "member": "Method org.gradle.api.publish.ivy.tasks.PublishToIvyRepository.getIvyPublisher()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.publish.maven.tasks.AbstractPublishToMaven",
            "member": "Method org.gradle.api.publish.maven.tasks.AbstractPublishToMaven.getDuplicatePublicationTracker()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.publish.maven.tasks.AbstractPublishToMaven",
            "member": "Method org.gradle.api.publish.maven.tasks.AbstractPublishToMaven.getMavenPublishers()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.publish.maven.tasks.GenerateMavenPom",
            "member": "Method org.gradle.api.publish.maven.tasks.GenerateMavenPom.getFileResolver()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.publish.maven.tasks.GenerateMavenPom",
            "member": "Method org.gradle.api.publish.maven.tasks.GenerateMavenPom.getVersionRangeMapper()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.publish.maven.tasks.GenerateMavenPom",
            "member": "Method org.gradle.api.publish.maven.tasks.GenerateMavenPom.withCompileScopeAttributes(org.gradle.api.internal.attributes.ImmutableAttributes)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.publish.maven.tasks.GenerateMavenPom",
            "member": "Method org.gradle.api.publish.maven.tasks.GenerateMavenPom.withRuntimeScopeAttributes(org.gradle.api.internal.attributes.ImmutableAttributes)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.publish.maven.tasks.PublishToMavenRepository",
            "member": "Method org.gradle.api.publish.maven.tasks.PublishToMavenRepository.getListenerManager()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.publish.tasks.GenerateModuleMetadata",
            "member": "Method org.gradle.api.publish.tasks.GenerateModuleMetadata.getBuildInvocationScopeId()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.publish.tasks.GenerateModuleMetadata",
            "member": "Method org.gradle.api.publish.tasks.GenerateModuleMetadata.getChecksumService()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.publish.tasks.GenerateModuleMetadata",
            "member": "Method org.gradle.api.publish.tasks.GenerateModuleMetadata.getFileCollectionFactory()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.publish.tasks.GenerateModuleMetadata",
            "member": "Method org.gradle.api.publish.tasks.GenerateModuleMetadata.getProjectDependencyPublicationResolver()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.reporting.ConfigurableReport",
            "member": "Method org.gradle.api.reporting.ConfigurableReport.setDestination(java.io.File)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.reporting.GenerateBuildDashboard",
            "member": "Method org.gradle.api.reporting.GenerateBuildDashboard.aggregate(org.gradle.api.reporting.Reporting[])",
            "acceptation": "Method made final to allow @SafeVarargs annotation",
            "changes": [
                "Method is now final"
            ]
        },
        {
            "type": "org.gradle.api.reporting.GenerateBuildDashboard",
            "member": "Method org.gradle.api.reporting.GenerateBuildDashboard.getCollectionCallbackActionDecorator()",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.reporting.GenerateBuildDashboard",
            "member": "Method org.gradle.api.reporting.GenerateBuildDashboard.getInstantiator()",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.reporting.ReportingExtension",
            "member": "Method org.gradle.api.reporting.ReportingExtension.getBaseDir()",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.reporting.ReportingExtension",
            "member": "Method org.gradle.api.reporting.ReportingExtension.setBaseDir(java.io.File)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.reporting.ReportingExtension",
            "member": "Method org.gradle.api.reporting.ReportingExtension.setBaseDir(java.lang.Object)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.reporting.components.ComponentReport",
            "member": "Method org.gradle.api.reporting.components.ComponentReport.getBinaryRenderer()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.reporting.components.ComponentReport",
            "member": "Method org.gradle.api.reporting.components.ComponentReport.getFileResolver()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.reporting.components.ComponentReport",
            "member": "Method org.gradle.api.reporting.components.ComponentReport.getModelRegistry()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.reporting.components.ComponentReport",
            "member": "Method org.gradle.api.reporting.components.ComponentReport.getTextOutputFactory()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.reporting.dependencies.HtmlDependencyReportTask",
            "member": "Method org.gradle.api.reporting.dependencies.HtmlDependencyReportTask.getCallbackActionDecorator()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.reporting.dependencies.HtmlDependencyReportTask",
            "member": "Method org.gradle.api.reporting.dependencies.HtmlDependencyReportTask.getObjectFactory()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.reporting.dependencies.HtmlDependencyReportTask",
            "member": "Method org.gradle.api.reporting.dependencies.HtmlDependencyReportTask.getVersionComparator()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.reporting.dependencies.HtmlDependencyReportTask",
            "member": "Method org.gradle.api.reporting.dependencies.HtmlDependencyReportTask.getVersionParser()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.reporting.dependencies.HtmlDependencyReportTask",
            "member": "Method org.gradle.api.reporting.dependencies.HtmlDependencyReportTask.getVersionSelectorScheme()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.reporting.dependents.DependentComponentsReport",
            "member": "Method org.gradle.api.reporting.dependents.DependentComponentsReport.getModelRegistry()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.reporting.dependents.DependentComponentsReport",
            "member": "Method org.gradle.api.reporting.dependents.DependentComponentsReport.getTextOutputFactory()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.reporting.dependents.DependentComponentsReport",
            "member": "Method org.gradle.api.reporting.dependents.DependentComponentsReport.getWorkerLeaseService()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.reporting.model.ModelReport",
            "member": "Method org.gradle.api.reporting.model.ModelReport.getModelRegistry()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.reporting.model.ModelReport",
            "member": "Method org.gradle.api.reporting.model.ModelReport.getTextOutputFactory()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.specs.AndSpec",
            "member": "Method org.gradle.api.specs.AndSpec.and(org.gradle.api.specs.Spec[])",
            "acceptation": "Method made final to allow @SafeVarargs annotation",
            "changes": [
                "Method is now final"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractCopyTask",
            "member": "Method org.gradle.api.tasks.AbstractCopyTask.getDirectoryFileTreeFactory()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractCopyTask",
            "member": "Method org.gradle.api.tasks.AbstractCopyTask.getDocumentationRegistry()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractCopyTask",
            "member": "Method org.gradle.api.tasks.AbstractCopyTask.getFileLookup()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractCopyTask",
            "member": "Method org.gradle.api.tasks.AbstractCopyTask.getFileResolver()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractCopyTask",
            "member": "Method org.gradle.api.tasks.AbstractCopyTask.getFileSystem()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractCopyTask",
            "member": "Method org.gradle.api.tasks.AbstractCopyTask.getInstantiator()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractCopyTask",
            "member": "Method org.gradle.api.tasks.AbstractCopyTask.getObjectFactory()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractCopyTask",
            "member": "Method org.gradle.api.tasks.AbstractCopyTask.getPropertyFactory()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractCopyTask",
            "member": "Method org.gradle.api.tasks.AbstractCopyTask.setDirMode(java.lang.Integer)",
            "acceptation": "[API is being remove in Gradle 9.0]",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractCopyTask",
            "member": "Method org.gradle.api.tasks.AbstractCopyTask.setFileMode(java.lang.Integer)",
            "acceptation": "[API is being remove in Gradle 9.0]",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractExecTask",
            "member": "Method org.gradle.api.tasks.AbstractExecTask.getExecActionFactory()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractExecTask",
            "member": "Method org.gradle.api.tasks.AbstractExecTask.getObjectFactory()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.Delete",
            "member": "Method org.gradle.api.tasks.Delete.getDeleter()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.GradleBuild",
            "member": "Method org.gradle.api.tasks.GradleBuild.getBuildFile()",
            "acceptation": "Remove deprecated feature",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.GradleBuild",
            "member": "Method org.gradle.api.tasks.GradleBuild.setBuildFile(java.io.File)",
            "acceptation": "Remove deprecated feature",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.GradleBuild",
            "member": "Method org.gradle.api.tasks.GradleBuild.setBuildFile(java.lang.Object)",
            "acceptation": "Remove deprecated feature",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.GroovySourceSet",
            "member": "Class org.gradle.api.tasks.GroovySourceSet",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.GroovySourceSet",
            "member": "Method org.gradle.api.tasks.GroovySourceSet.getAllGroovy()",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.GroovySourceSet",
            "member": "Method org.gradle.api.tasks.GroovySourceSet.getGroovy()",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.GroovySourceSet",
            "member": "Method org.gradle.api.tasks.GroovySourceSet.groovy(groovy.lang.Closure)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.GroovySourceSet",
            "member": "Method org.gradle.api.tasks.GroovySourceSet.groovy(org.gradle.api.Action)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.JavaExec",
            "member": "Method org.gradle.api.tasks.JavaExec.getExecActionFactory()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.JavaExec",
            "member": "Method org.gradle.api.tasks.JavaExec.getJavaToolchainService()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.JavaExec",
            "member": "Method org.gradle.api.tasks.JavaExec.getObjectFactory()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.JavaExec",
            "member": "Method org.gradle.api.tasks.JavaExec.getPropertyFactory()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.JavaExec",
            "member": "Method org.gradle.api.tasks.JavaExec.getProviderFactory()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.JavaExec",
            "member": "Method org.gradle.api.tasks.JavaExec.getSystemProperties()",
            "acceptation": "Values of returned map can be null",
            "changes": [
                "From non-null returning to null returning breaking change"
            ]
        },
        {
            "type": "org.gradle.api.tasks.ScalaSourceSet",
            "member": "Class org.gradle.api.tasks.ScalaSourceSet",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.ScalaSourceSet",
            "member": "Method org.gradle.api.tasks.ScalaSourceSet.getAllScala()",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.ScalaSourceSet",
            "member": "Method org.gradle.api.tasks.ScalaSourceSet.getScala()",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.ScalaSourceSet",
            "member": "Method org.gradle.api.tasks.ScalaSourceSet.scala(groovy.lang.Closure)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.ScalaSourceSet",
            "member": "Method org.gradle.api.tasks.ScalaSourceSet.scala(org.gradle.api.Action)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.SourceTask",
            "member": "Method org.gradle.api.tasks.SourceTask.getPatternSetFactory()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.Sync",
            "member": "Method org.gradle.api.tasks.Sync.getDeleter()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.Upload",
            "member": "Class org.gradle.api.tasks.Upload",
            "acceptation": "Removed deprecated class",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.Upload",
            "member": "Constructor org.gradle.api.tasks.Upload()",
            "acceptation": "Removed deprecated class",
            "changes": [
                "Constructor has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.Upload",
            "member": "Method org.gradle.api.tasks.Upload.getArtifacts()",
            "acceptation": "Removed deprecated class",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.Upload",
            "member": "Method org.gradle.api.tasks.Upload.getConfiguration()",
            "acceptation": "Removed deprecated class",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.Upload",
            "member": "Method org.gradle.api.tasks.Upload.getDescriptorDestination()",
            "acceptation": "Removed deprecated class",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.Upload",
            "member": "Method org.gradle.api.tasks.Upload.getDocumentationRegistry()",
            "acceptation": "Removed deprecated class",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.Upload",
            "member": "Method org.gradle.api.tasks.Upload.getRepositories()",
            "acceptation": "Removed deprecated class",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.Upload",
            "member": "Method org.gradle.api.tasks.Upload.isUploadDescriptor()",
            "acceptation": "Removed deprecated class",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.Upload",
            "member": "Method org.gradle.api.tasks.Upload.repositories(groovy.lang.Closure)",
            "acceptation": "Removed deprecated class",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.Upload",
            "member": "Method org.gradle.api.tasks.Upload.repositories(org.gradle.api.Action)",
            "acceptation": "Removed deprecated class",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.Upload",
            "member": "Method org.gradle.api.tasks.Upload.setConfiguration(org.gradle.api.artifacts.Configuration)",
            "acceptation": "Removed deprecated class",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.Upload",
            "member": "Method org.gradle.api.tasks.Upload.setDescriptorDestination(java.io.File)",
            "acceptation": "Removed deprecated class",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.Upload",
            "member": "Method org.gradle.api.tasks.Upload.setUploadDescriptor(boolean)",
            "acceptation": "Removed deprecated class",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.Upload",
            "member": "Method org.gradle.api.tasks.Upload.upload()",
            "acceptation": "Removed deprecated class",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.WriteProperties",
            "member": "Method org.gradle.api.tasks.WriteProperties.getOutputFile()",
            "acceptation": "remove deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.WriteProperties",
            "member": "Method org.gradle.api.tasks.WriteProperties.setOutputFile(java.io.File)",
            "acceptation": "remove deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.WriteProperties",
            "member": "Method org.gradle.api.tasks.WriteProperties.setOutputFile(java.lang.Object)",
            "acceptation": "remove deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.bundling.AbstractArchiveTask",
            "member": "Method org.gradle.api.tasks.bundling.AbstractArchiveTask.getArchivePath()",
            "acceptation": "remove deprecated property",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.AbstractCompile",
            "member": "Method org.gradle.api.tasks.compile.AbstractCompile.getDestinationDir()",
            "acceptation": "Removing @Deprecated property for Gradle 9.0",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.AbstractCompile",
            "member": "Method org.gradle.api.tasks.compile.AbstractCompile.setDestinationDir(java.io.File)",
            "acceptation": "Removing @Deprecated property for Gradle 9.0",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.AbstractCompile",
            "member": "Method org.gradle.api.tasks.compile.AbstractCompile.setDestinationDir(org.gradle.api.provider.Provider)",
            "acceptation": "Removing @Deprecated property for Gradle 9.0",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.AbstractOptions",
            "member": "Class org.gradle.api.tasks.compile.AbstractOptions",
            "acceptation": "Removed deprecated class",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.AbstractOptions",
            "member": "Constructor org.gradle.api.tasks.compile.AbstractOptions()",
            "acceptation": "Removed deprecated class",
            "changes": [
                "Constructor has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.AbstractOptions",
            "member": "Method org.gradle.api.tasks.compile.AbstractOptions.define(java.util.Map)",
            "acceptation": "Removed deprecated class",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.BaseForkOptions",
            "member": "Superclass [removed]",
            "acceptation": "Removed deprecated class",
            "changes": [
                "Superclass has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method org.gradle.api.tasks.compile.CompileOptions.debug(java.util.Map)",
            "acceptation": "Removed deprecated class",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method org.gradle.api.tasks.compile.CompileOptions.fork(java.util.Map)",
            "acceptation": "Removed deprecated class",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method org.gradle.api.tasks.compile.CompileOptions.setAnnotationProcessorGeneratedSourcesDirectory(org.gradle.api.provider.Provider)",
            "acceptation": "Remove deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method org.gradle.api.tasks.compile.CompileOptions.setDebugOptions(org.gradle.api.tasks.compile.DebugOptions)",
            "acceptation": "Remove deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method org.gradle.api.tasks.compile.CompileOptions.setForkOptions(org.gradle.api.tasks.compile.ForkOptions)",
            "acceptation": "Remove deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Superclass [removed]",
            "acceptation": "Removed deprecated class",
            "changes": [
                "Superclass has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.DebugOptions",
            "member": "Superclass [removed]",
            "acceptation": "Removed deprecated class",
            "changes": [
                "Superclass has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.GroovyCompileOptions",
            "member": "Method org.gradle.api.tasks.compile.GroovyCompileOptions.fork(java.util.Map)",
            "acceptation": "Removed deprecated class",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.GroovyCompileOptions",
            "member": "Method org.gradle.api.tasks.compile.GroovyCompileOptions.getObjectFactory()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.GroovyCompileOptions",
            "member": "Method org.gradle.api.tasks.compile.GroovyCompileOptions.setForkOptions(org.gradle.api.tasks.compile.GroovyForkOptions)",
            "acceptation": "Remove deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.GroovyCompileOptions",
            "member": "Superclass [removed]",
            "acceptation": "Removed deprecated class",
            "changes": [
                "Superclass has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.JavaCompile",
            "member": "Method org.gradle.api.tasks.compile.JavaCompile.getDeleter()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.JavaCompile",
            "member": "Method org.gradle.api.tasks.compile.JavaCompile.getIncrementalCompilerFactory()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.JavaCompile",
            "member": "Method org.gradle.api.tasks.compile.JavaCompile.getJavaModuleDetector()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.JavaCompile",
            "member": "Method org.gradle.api.tasks.compile.JavaCompile.getJavaToolchainService()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.JavaCompile",
            "member": "Method org.gradle.api.tasks.compile.JavaCompile.getObjectFactory()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.JavaCompile",
            "member": "Method org.gradle.api.tasks.compile.JavaCompile.getProjectLayout()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.JavaCompile",
            "member": "Method org.gradle.api.tasks.compile.JavaCompile.getPropertyFactory()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.JavaCompile",
            "member": "Method org.gradle.api.tasks.compile.JavaCompile.getProviderFactory()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.diagnostics.AbstractReportTask",
            "member": "Method org.gradle.api.tasks.diagnostics.AbstractReportTask.getClientMetaData()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.diagnostics.AbstractReportTask",
            "member": "Method org.gradle.api.tasks.diagnostics.AbstractReportTask.getTextOutputFactory()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.diagnostics.BuildEnvironmentReportTask",
            "member": "Method org.gradle.api.tasks.diagnostics.BuildEnvironmentReportTask.getClientMetaData()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.diagnostics.BuildEnvironmentReportTask",
            "member": "Method org.gradle.api.tasks.diagnostics.BuildEnvironmentReportTask.getTextOutputFactory()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.diagnostics.ConventionReportTask",
            "member": "Method org.gradle.api.tasks.diagnostics.ConventionReportTask.getClientMetaData()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.diagnostics.ConventionReportTask",
            "member": "Method org.gradle.api.tasks.diagnostics.ConventionReportTask.getTextOutputFactory()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.diagnostics.DependencyInsightReportTask",
            "member": "Method org.gradle.api.tasks.diagnostics.DependencyInsightReportTask.getDependencySpec()",
            "acceptation": "Remove deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.diagnostics.DependencyInsightReportTask",
            "member": "Method org.gradle.api.tasks.diagnostics.DependencyInsightReportTask.getImmutableAttributesFactory()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.diagnostics.DependencyInsightReportTask",
            "member": "Method org.gradle.api.tasks.diagnostics.DependencyInsightReportTask.getTextOutputFactory()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.diagnostics.DependencyInsightReportTask",
            "member": "Method org.gradle.api.tasks.diagnostics.DependencyInsightReportTask.getVersionComparator()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.diagnostics.DependencyInsightReportTask",
            "member": "Method org.gradle.api.tasks.diagnostics.DependencyInsightReportTask.getVersionParser()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.diagnostics.DependencyInsightReportTask",
            "member": "Method org.gradle.api.tasks.diagnostics.DependencyInsightReportTask.getVersionSelectorScheme()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.diagnostics.ProjectReportTask",
            "member": "Method org.gradle.api.tasks.diagnostics.ProjectReportTask.getBuildStateRegistry()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.diagnostics.TaskReportTask",
            "member": "Method org.gradle.api.tasks.diagnostics.TaskReportTask.getProjectStateRegistry()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.diagnostics.TaskReportTask",
            "member": "Method org.gradle.api.tasks.diagnostics.TaskReportTask.getProjectTaskLister()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.javadoc.Groovydoc",
            "member": "Method org.gradle.api.tasks.javadoc.Groovydoc.getAntGroovydoc()",
            "acceptation": "these methods were deprecated",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.javadoc.Groovydoc",
            "member": "Method org.gradle.api.tasks.javadoc.Groovydoc.getDeleter()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.javadoc.Groovydoc",
            "member": "Method org.gradle.api.tasks.javadoc.Groovydoc.setAntGroovydoc(org.gradle.api.internal.tasks.AntGroovydoc)",
            "acceptation": "these methods were deprecated",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.javadoc.Javadoc",
            "member": "Method org.gradle.api.tasks.javadoc.Javadoc.getDeleter()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.javadoc.Javadoc",
            "member": "Method org.gradle.api.tasks.javadoc.Javadoc.getJavaModuleDetector()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.javadoc.Javadoc",
            "member": "Method org.gradle.api.tasks.javadoc.Javadoc.getJavaToolchainService()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.javadoc.Javadoc",
            "member": "Method org.gradle.api.tasks.javadoc.Javadoc.getObjectFactory()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.javadoc.Javadoc",
            "member": "Method org.gradle.api.tasks.javadoc.Javadoc.getProjectLayout()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.javadoc.Javadoc",
            "member": "Method org.gradle.api.tasks.javadoc.Javadoc.getPropertyFactory()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.javadoc.Javadoc",
            "member": "Method org.gradle.api.tasks.javadoc.Javadoc.getProviderFactory()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.javadoc.Javadoc",
            "member": "Method org.gradle.api.tasks.javadoc.Javadoc.isVerbose()",
            "acceptation": "Remove deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.javadoc.Javadoc",
            "member": "Method org.gradle.api.tasks.javadoc.Javadoc.setVerbose(boolean)",
            "acceptation": "Remove deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.scala.ScalaDoc",
            "member": "Method org.gradle.api.tasks.scala.ScalaDoc.getAntBuilder()",
            "acceptation": "Removed deprecated accessor",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.scala.ScalaDoc",
            "member": "Method org.gradle.api.tasks.scala.ScalaDoc.setScalaDocOptions(org.gradle.api.tasks.scala.ScalaDocOptions)",
            "acceptation": "Remove deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.scala.ScalaDocOptions",
            "member": "Superclass [removed]",
            "acceptation": "Removed deprecated class",
            "changes": [
                "Superclass has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.AbstractTestTask",
            "member": "Method org.gradle.api.tasks.testing.AbstractTestTask.getBuildOperationExecutor()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.AbstractTestTask",
            "member": "Method org.gradle.api.tasks.testing.AbstractTestTask.getBuildOperationRunner()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.AbstractTestTask",
            "member": "Method org.gradle.api.tasks.testing.AbstractTestTask.getFailOnNoDiscoveredTests()",
            "acceptation": "Adding as a stable opt-out for new behavior in 9.0",
            "changes": [
                "Method added to public class",
                "Abstract method has been added to this class"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.AbstractTestTask",
            "member": "Method org.gradle.api.tasks.testing.AbstractTestTask.getFileSystemOperations()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.AbstractTestTask",
            "member": "Method org.gradle.api.tasks.testing.AbstractTestTask.getHostnameLookup()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.AbstractTestTask",
            "member": "Method org.gradle.api.tasks.testing.AbstractTestTask.getInstantiator()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.AbstractTestTask",
            "member": "Method org.gradle.api.tasks.testing.AbstractTestTask.getListenerManager()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.AbstractTestTask",
            "member": "Method org.gradle.api.tasks.testing.AbstractTestTask.getProgressLoggerFactory()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.AbstractTestTask",
            "member": "Method org.gradle.api.tasks.testing.AbstractTestTask.getTextOutputFactory()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.Test",
            "member": "Method org.gradle.api.tasks.testing.Test.getActorFactory()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.Test",
            "member": "Method org.gradle.api.tasks.testing.Test.getForkOptionsFactory()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.Test",
            "member": "Method org.gradle.api.tasks.testing.Test.getJavaModuleDetector()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.Test",
            "member": "Method org.gradle.api.tasks.testing.Test.getJavaToolchainService()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.Test",
            "member": "Method org.gradle.api.tasks.testing.Test.getModuleRegistry()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.Test",
            "member": "Method org.gradle.api.tasks.testing.Test.getObjectFactory()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.Test",
            "member": "Method org.gradle.api.tasks.testing.Test.getPatternSetFactory()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.Test",
            "member": "Method org.gradle.api.tasks.testing.Test.getProcessBuilderFactory()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.Test",
            "member": "Method org.gradle.api.tasks.testing.Test.getPropertyFactory()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.Test",
            "member": "Method org.gradle.api.tasks.testing.Test.getProviderFactory()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.Test",
            "member": "Method org.gradle.api.tasks.testing.Test.getSystemProperties()",
            "acceptation": "Values of returned map can be null",
            "changes": [
                "From non-null returning to null returning breaking change"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.Test",
            "member": "Method org.gradle.api.tasks.testing.Test.setForkEvery(java.lang.Long)",
            "acceptation": "Remove deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.TestFrameworkOptions",
            "member": "Class org.gradle.api.tasks.testing.TestFrameworkOptions",
            "acceptation": "abstract classes are better for injection",
            "changes": [
                "Class is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.TestReport",
            "member": "Method org.gradle.api.tasks.testing.TestReport.getDestinationDir()",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.TestReport",
            "member": "Method org.gradle.api.tasks.testing.TestReport.getDestinationDirectory()",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.TestReport",
            "member": "Method org.gradle.api.tasks.testing.TestReport.getTestResults()",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.TestReport",
            "member": "Method org.gradle.api.tasks.testing.TestReport.reportOn(java.lang.Object[])",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.TestReport",
            "member": "Method org.gradle.api.tasks.testing.TestReport.setDestinationDir(java.io.File)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.junit.JUnitOptions",
            "member": "Class org.gradle.api.tasks.testing.junit.JUnitOptions",
            "acceptation": "abstract classes are better for injection",
            "changes": [
                "Class is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.junitplatform.JUnitPlatformOptions",
            "member": "Class org.gradle.api.tasks.testing.junitplatform.JUnitPlatformOptions",
            "acceptation": "abstract classes are better for decoration",
            "changes": [
                "Class is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.wrapper.Wrapper",
            "member": "Method org.gradle.api.tasks.wrapper.Wrapper.getFileLookup()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.caching.BuildCacheKey",
            "member": "Method org.gradle.caching.BuildCacheKey.getDisplayName()",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.caching.local.DirectoryBuildCache",
            "member": "Method org.gradle.caching.local.DirectoryBuildCache.getRemoveUnusedEntriesAfterDays()",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.caching.local.DirectoryBuildCache",
            "member": "Method org.gradle.caching.local.DirectoryBuildCache.setRemoveUnusedEntriesAfterDays(int)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.jvm.application.tasks.CreateStartScripts",
            "member": "Method org.gradle.jvm.application.tasks.CreateStartScripts.getJavaModuleDetector()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.jvm.application.tasks.CreateStartScripts",
            "member": "Method org.gradle.jvm.application.tasks.CreateStartScripts.getMainClassName()",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.jvm.application.tasks.CreateStartScripts",
            "member": "Method org.gradle.jvm.application.tasks.CreateStartScripts.getObjectFactory()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.jvm.application.tasks.CreateStartScripts",
            "member": "Method org.gradle.jvm.application.tasks.CreateStartScripts.setMainClassName(java.lang.String)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.jvm.toolchain.JvmVendorSpec",
            "member": "Field IBM_SEMERU",
            "acceptation": "Deprecated API",
            "changes": [
                "Field has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.BuiltinPluginIdExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.BuiltinPluginIdExtensionsKt.getComponent-reporting-tasks(org.gradle.plugin.use.PluginDependenciesSpec)",
            "acceptation": "Removing component reporting tasks from HelpTasksPlugin",
            "changes": [
                "Method added to public class"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.BuiltinPluginIdExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.BuiltinPluginIdExtensionsKt.getModel-reporting-tasks(org.gradle.plugin.use.PluginDependenciesSpec)",
            "acceptation": "Removing model reporting tasks from HelpTasksPlugin",
            "changes": [
                "Method added to public class"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ClientModuleScope",
            "member": "Class org.gradle.kotlin.dsl.ClientModuleScope",
            "acceptation": "Remove deprecated class",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ClientModuleScope",
            "member": "Constructor org.gradle.kotlin.dsl.ClientModuleScope(org.gradle.api.artifacts.dsl.DependencyHandler,org.gradle.api.artifacts.ClientModule)",
            "acceptation": "Remove deprecated class",
            "changes": [
                "Constructor has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ClientModuleScope",
            "member": "Method org.gradle.kotlin.dsl.ClientModuleScope.dependencies(java.lang.Object[])",
            "acceptation": "Remove deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ClientModuleScope",
            "member": "Method org.gradle.kotlin.dsl.ClientModuleScope.dependency(java.lang.Object)",
            "acceptation": "Remove deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ClientModuleScope",
            "member": "Method org.gradle.kotlin.dsl.ClientModuleScope.dependency(java.lang.String,kotlin.jvm.functions.Function1)",
            "acceptation": "Remove deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ClientModuleScope",
            "member": "Method org.gradle.kotlin.dsl.ClientModuleScope.getClientModule()",
            "acceptation": "Remove deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ClientModuleScope",
            "member": "Method org.gradle.kotlin.dsl.ClientModuleScope.module$default(org.gradle.kotlin.dsl.ClientModuleScope,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,kotlin.jvm.functions.Function1,int,java.lang.Object)",
            "acceptation": "Remove deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ClientModuleScope",
            "member": "Method org.gradle.kotlin.dsl.ClientModuleScope.module(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,kotlin.jvm.functions.Function1)",
            "acceptation": "Remove deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Class org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.addToAntBuilder(org.gradle.api.NamedDomainObjectProvider,java.lang.Object,java.lang.String)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.addToAntBuilder(org.gradle.api.NamedDomainObjectProvider,java.lang.Object,java.lang.String,org.gradle.api.file.FileCollection$AntType)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.attributes(org.gradle.api.NamedDomainObjectProvider,kotlin.jvm.functions.Function1)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.contains(org.gradle.api.NamedDomainObjectProvider,java.io.File)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.copy(org.gradle.api.NamedDomainObjectProvider)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.copy(org.gradle.api.NamedDomainObjectProvider,org.gradle.api.specs.Spec)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.copyRecursive(org.gradle.api.NamedDomainObjectProvider)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.copyRecursive(org.gradle.api.NamedDomainObjectProvider,org.gradle.api.specs.Spec)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.defaultDependencies(org.gradle.api.NamedDomainObjectProvider,kotlin.jvm.functions.Function1)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.exclude(org.gradle.api.NamedDomainObjectProvider,java.util.Map)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.exclude(org.gradle.api.NamedDomainObjectProvider,kotlin.Pair[])",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.extendsFrom(org.gradle.api.NamedDomainObjectProvider,org.gradle.api.artifacts.Configuration[])",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.fileCollection(org.gradle.api.NamedDomainObjectProvider,org.gradle.api.artifacts.Dependency[])",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.fileCollection(org.gradle.api.NamedDomainObjectProvider,org.gradle.api.specs.Spec)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.files(org.gradle.api.NamedDomainObjectProvider,org.gradle.api.artifacts.Dependency[])",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.files(org.gradle.api.NamedDomainObjectProvider,org.gradle.api.specs.Spec)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.filter(org.gradle.api.NamedDomainObjectProvider,org.gradle.api.specs.Spec)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.getAll$annotations(org.gradle.api.NamedDomainObjectProvider)",
            "acceptation": "Remove deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.getAll(org.gradle.api.NamedDomainObjectProvider)",
            "acceptation": "Remove deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.getAllArtifacts$annotations(org.gradle.api.NamedDomainObjectProvider)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.getAllArtifacts(org.gradle.api.NamedDomainObjectProvider)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.getAllDependencies$annotations(org.gradle.api.NamedDomainObjectProvider)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.getAllDependencies(org.gradle.api.NamedDomainObjectProvider)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.getAllDependencyConstraints$annotations(org.gradle.api.NamedDomainObjectProvider)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.getAllDependencyConstraints(org.gradle.api.NamedDomainObjectProvider)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.getArtifacts$annotations(org.gradle.api.NamedDomainObjectProvider)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.getArtifacts(org.gradle.api.NamedDomainObjectProvider)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.getAsFileTree$annotations(org.gradle.api.NamedDomainObjectProvider)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.getAsFileTree(org.gradle.api.NamedDomainObjectProvider)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.getAsPath$annotations(org.gradle.api.NamedDomainObjectProvider)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.getAsPath(org.gradle.api.NamedDomainObjectProvider)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.getAttributes$annotations(org.gradle.api.NamedDomainObjectProvider)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.getAttributes(org.gradle.api.NamedDomainObjectProvider)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.getBuildDependencies$annotations(org.gradle.api.NamedDomainObjectProvider)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.getBuildDependencies(org.gradle.api.NamedDomainObjectProvider)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.getDependencies$annotations(org.gradle.api.NamedDomainObjectProvider)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.getDependencies(org.gradle.api.NamedDomainObjectProvider)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.getDependencyConstraints$annotations(org.gradle.api.NamedDomainObjectProvider)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.getDependencyConstraints(org.gradle.api.NamedDomainObjectProvider)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.getDescription$annotations(org.gradle.api.NamedDomainObjectProvider)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.getDescription(org.gradle.api.NamedDomainObjectProvider)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.getExcludeRules$annotations(org.gradle.api.NamedDomainObjectProvider)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.getExcludeRules(org.gradle.api.NamedDomainObjectProvider)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.getExtendsFrom$annotations(org.gradle.api.NamedDomainObjectProvider)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.getExtendsFrom(org.gradle.api.NamedDomainObjectProvider)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.getFiles$annotations(org.gradle.api.NamedDomainObjectProvider)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.getFiles(org.gradle.api.NamedDomainObjectProvider)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.getHierarchy$annotations(org.gradle.api.NamedDomainObjectProvider)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.getHierarchy(org.gradle.api.NamedDomainObjectProvider)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.getIncoming$annotations(org.gradle.api.NamedDomainObjectProvider)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.getIncoming(org.gradle.api.NamedDomainObjectProvider)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.getOutgoing$annotations(org.gradle.api.NamedDomainObjectProvider)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.getOutgoing(org.gradle.api.NamedDomainObjectProvider)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.getResolutionStrategy$annotations(org.gradle.api.NamedDomainObjectProvider)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.getResolutionStrategy(org.gradle.api.NamedDomainObjectProvider)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.getResolvedConfiguration$annotations(org.gradle.api.NamedDomainObjectProvider)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.getResolvedConfiguration(org.gradle.api.NamedDomainObjectProvider)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.getSingleFile$annotations(org.gradle.api.NamedDomainObjectProvider)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.getSingleFile(org.gradle.api.NamedDomainObjectProvider)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.getState$annotations(org.gradle.api.NamedDomainObjectProvider)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.getState(org.gradle.api.NamedDomainObjectProvider)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.getTaskDependencyFromProjectDependency(org.gradle.api.NamedDomainObjectProvider,boolean,java.lang.String)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.isCanBeConsumed$annotations(org.gradle.api.NamedDomainObjectProvider)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.isCanBeConsumed(org.gradle.api.NamedDomainObjectProvider)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.isCanBeResolved$annotations(org.gradle.api.NamedDomainObjectProvider)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.isCanBeResolved(org.gradle.api.NamedDomainObjectProvider)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.isEmpty$annotations(org.gradle.api.NamedDomainObjectProvider)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.isEmpty(org.gradle.api.NamedDomainObjectProvider)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.isTransitive$annotations(org.gradle.api.NamedDomainObjectProvider)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.isTransitive(org.gradle.api.NamedDomainObjectProvider)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.isVisible$annotations(org.gradle.api.NamedDomainObjectProvider)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.isVisible(org.gradle.api.NamedDomainObjectProvider)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.minus(org.gradle.api.NamedDomainObjectProvider,org.gradle.api.file.FileCollection)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.minus(org.gradle.api.file.FileCollection,org.gradle.api.NamedDomainObjectProvider)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.outgoing(org.gradle.api.NamedDomainObjectProvider,kotlin.jvm.functions.Function1)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.plus(org.gradle.api.NamedDomainObjectProvider,org.gradle.api.file.FileCollection)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.plus(org.gradle.api.file.FileCollection,org.gradle.api.NamedDomainObjectProvider)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.resolutionStrategy(org.gradle.api.NamedDomainObjectProvider,kotlin.jvm.functions.Function1)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.resolve(org.gradle.api.NamedDomainObjectProvider)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.setCanBeConsumed(org.gradle.api.NamedDomainObjectProvider,boolean)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.setCanBeResolved(org.gradle.api.NamedDomainObjectProvider,boolean)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.setDescription(org.gradle.api.NamedDomainObjectProvider,java.lang.String)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.setExtendsFrom(org.gradle.api.NamedDomainObjectProvider,java.lang.Iterable)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.setTransitive(org.gradle.api.NamedDomainObjectProvider,boolean)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.setVisible(org.gradle.api.NamedDomainObjectProvider,boolean)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConfigurationDeprecatedExtensionsKt.withDependencies(org.gradle.api.NamedDomainObjectProvider,kotlin.jvm.functions.Function1)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConventionExtensionsKt",
            "member": "Class org.gradle.kotlin.dsl.ConventionExtensionsKt",
            "acceptation": "Remove Convention",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConventionExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConventionExtensionsKt.findPlugin(org.gradle.api.plugins.Convention)",
            "acceptation": "Remove deprecated Convention",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConventionExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConventionExtensionsKt.findPlugin(org.gradle.api.plugins.Convention,kotlin.reflect.KClass)",
            "acceptation": "Remove Convention",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConventionExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConventionExtensionsKt.getPlugin(org.gradle.api.plugins.Convention)",
            "acceptation": "Remove deprecated Convention",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConventionExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConventionExtensionsKt.getPlugin(org.gradle.api.plugins.Convention,kotlin.reflect.KClass)",
            "acceptation": "Remove deprecated Convention",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConventionExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConventionExtensionsKt.getPluginByName(org.gradle.api.plugins.Convention,java.lang.String)",
            "acceptation": "Remove deprecated Convention",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ConventionExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ConventionExtensionsKt.withConvention(java.lang.Object,kotlin.reflect.KClass,kotlin.jvm.functions.Function1)",
            "acceptation": "Remove deprecated Convention",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.DependencyHandlerExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.DependencyHandlerExtensionsKt.module$default(org.gradle.api.artifacts.dsl.DependencyHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)",
            "acceptation": "Remove deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.DependencyHandlerExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.DependencyHandlerExtensionsKt.module$default(org.gradle.api.artifacts.dsl.DependencyHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,kotlin.jvm.functions.Function1,int,java.lang.Object)",
            "acceptation": "Remove deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.DependencyHandlerExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.DependencyHandlerExtensionsKt.module(org.gradle.api.artifacts.dsl.DependencyHandler,java.lang.Object,kotlin.jvm.functions.Function1)",
            "acceptation": "Remove deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.DependencyHandlerExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.DependencyHandlerExtensionsKt.module(org.gradle.api.artifacts.dsl.DependencyHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "acceptation": "Remove deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.DependencyHandlerExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.DependencyHandlerExtensionsKt.module(org.gradle.api.artifacts.dsl.DependencyHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,kotlin.jvm.functions.Function1)",
            "acceptation": "Remove deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.DependencyHandlerScope",
            "member": "Class org.gradle.kotlin.dsl.DependencyHandlerScope",
            "acceptation": "Remove deprecated method",
            "changes": [
                "org.gradle.kotlin.dsl.support.delegates.DependencyHandlerDelegate.module(java.lang.Object)",
                "org.gradle.kotlin.dsl.support.delegates.DependencyHandlerDelegate.module(java.lang.Object,groovy.lang.Closure)"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.GradleApiKotlinDslExtensions_3ccx9qt1rxl3wzrx6gavdju4rKt",
            "member": "Class org.gradle.kotlin.dsl.GradleApiKotlinDslExtensions_3ccx9qt1rxl3wzrx6gavdju4rKt",
            "acceptation": "Removed deprecated class",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.GradleApiKotlinDslExtensions_3ccx9qt1rxl3wzrx6gavdju4rKt",
            "member": "Method org.gradle.kotlin.dsl.GradleApiKotlinDslExtensions_3ccx9qt1rxl3wzrx6gavdju4rKt.fork(org.gradle.api.tasks.compile.GroovyCompileOptions,kotlin.Pair[])",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.GradleApiKotlinDslExtensions_4q8db0fju46ujraxcpjzpivn1Kt",
            "member": "Class org.gradle.kotlin.dsl.GradleApiKotlinDslExtensions_4q8db0fju46ujraxcpjzpivn1Kt",
            "acceptation": "Removed deprecated class",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.GradleApiKotlinDslExtensions_4q8db0fju46ujraxcpjzpivn1Kt",
            "member": "Method org.gradle.kotlin.dsl.GradleApiKotlinDslExtensions_4q8db0fju46ujraxcpjzpivn1Kt.define(org.gradle.api.tasks.compile.AbstractOptions,kotlin.Pair[])",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.GradleApiKotlinDslExtensions_4vqe7vkwi3h45wskb54l2vuiuKt",
            "member": "Method org.gradle.kotlin.dsl.GradleApiKotlinDslExtensions_4vqe7vkwi3h45wskb54l2vuiuKt.setSystemProperties(org.gradle.process.JavaForkOptions,kotlin.Pair[])",
            "acceptation": "Values of returned map can be null",
            "changes": [
                "Method added to public class"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.GradleApiKotlinDslExtensions_87iiq4r8d2anat7cruxlw9c13Kt",
            "member": "Class org.gradle.kotlin.dsl.GradleApiKotlinDslExtensions_87iiq4r8d2anat7cruxlw9c13Kt",
            "acceptation": "Removed deprecated class",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.GradleApiKotlinDslExtensions_87iiq4r8d2anat7cruxlw9c13Kt",
            "member": "Method org.gradle.kotlin.dsl.GradleApiKotlinDslExtensions_87iiq4r8d2anat7cruxlw9c13Kt.debug(org.gradle.api.tasks.compile.CompileOptions,kotlin.Pair[])",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.GradleApiKotlinDslExtensions_87iiq4r8d2anat7cruxlw9c13Kt",
            "member": "Method org.gradle.kotlin.dsl.GradleApiKotlinDslExtensions_87iiq4r8d2anat7cruxlw9c13Kt.fork(org.gradle.api.tasks.compile.CompileOptions,kotlin.Pair[])",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.InitScriptApi",
            "member": "Method org.gradle.kotlin.dsl.InitScriptApi.exec(kotlin.jvm.functions.Function1)",
            "acceptation": "Remove deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.InitScriptApi",
            "member": "Method org.gradle.kotlin.dsl.InitScriptApi.getProcessOperations()",
            "acceptation": "Remove deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.InitScriptApi",
            "member": "Method org.gradle.kotlin.dsl.InitScriptApi.javaexec(kotlin.jvm.functions.Function1)",
            "acceptation": "Remove deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.KotlinBuildScript",
            "member": "Class org.gradle.kotlin.dsl.KotlinBuildScript",
            "acceptation": "Convention removal",
            "changes": [
                "org.gradle.kotlin.dsl.support.delegates.ProjectDelegate.exec(groovy.lang.Closure)",
                "org.gradle.kotlin.dsl.support.delegates.ProjectDelegate.exec(org.gradle.api.Action)",
                "org.gradle.kotlin.dsl.support.delegates.ProjectDelegate.getConvention()",
                "org.gradle.kotlin.dsl.support.delegates.ProjectDelegate.javaexec(groovy.lang.Closure)",
                "org.gradle.kotlin.dsl.support.delegates.ProjectDelegate.javaexec(org.gradle.api.Action)"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.KotlinGradleScriptTemplate",
            "member": "Class org.gradle.kotlin.dsl.KotlinGradleScriptTemplate",
            "acceptation": "Remove deprecated method",
            "changes": [
                "org.gradle.kotlin.dsl.support.DefaultKotlinScript.exec(org.gradle.api.Action)",
                "org.gradle.kotlin.dsl.support.DefaultKotlinScript.javaexec(org.gradle.api.Action)"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.KotlinProjectScriptTemplate",
            "member": "Class org.gradle.kotlin.dsl.KotlinProjectScriptTemplate",
            "acceptation": "Remove deprecated method",
            "changes": [
                "org.gradle.kotlin.dsl.support.DefaultKotlinScript.exec(org.gradle.api.Action)",
                "org.gradle.kotlin.dsl.support.DefaultKotlinScript.javaexec(org.gradle.api.Action)"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.KotlinScript",
            "member": "Method org.gradle.kotlin.dsl.KotlinScript.exec(org.gradle.api.Action)",
            "acceptation": "Remove deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.KotlinScript",
            "member": "Method org.gradle.kotlin.dsl.KotlinScript.javaexec(org.gradle.api.Action)",
            "acceptation": "Remove deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.KotlinSettingsScriptTemplate",
            "member": "Class org.gradle.kotlin.dsl.KotlinSettingsScriptTemplate",
            "acceptation": "Remove deprecated method",
            "changes": [
                "org.gradle.kotlin.dsl.support.DefaultKotlinScript.exec(org.gradle.api.Action)",
                "org.gradle.kotlin.dsl.support.DefaultKotlinScript.javaexec(org.gradle.api.Action)"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.NamedDomainObjectContainerScope",
            "member": "Method org.gradle.kotlin.dsl.NamedDomainObjectContainerScope.invoke(java.lang.String)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.PluginDependenciesSpecExtensionsKt",
            "member": "Class org.gradle.kotlin.dsl.PluginDependenciesSpecExtensionsKt",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.PluginDependenciesSpecExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.PluginDependenciesSpecExtensionsKt.getGradle-enterprise$annotations(org.gradle.plugin.use.PluginDependenciesSpec)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.PluginDependenciesSpecExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.PluginDependenciesSpecExtensionsKt.getGradle-enterprise(org.gradle.plugin.use.PluginDependenciesSpec)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.SettingsScriptApi",
            "member": "Method org.gradle.kotlin.dsl.SettingsScriptApi.exec(kotlin.jvm.functions.Function1)",
            "acceptation": "Remove deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.SettingsScriptApi",
            "member": "Method org.gradle.kotlin.dsl.SettingsScriptApi.getProcessOperations()",
            "acceptation": "Remove deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.SettingsScriptApi",
            "member": "Method org.gradle.kotlin.dsl.SettingsScriptApi.javaexec(kotlin.jvm.functions.Function1)",
            "acceptation": "Remove deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.TaskContainerScope",
            "member": "Method org.gradle.kotlin.dsl.TaskContainerScope.invoke(java.lang.String)",
            "acceptation": "Removed deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.precompile.PrecompiledInitScript",
            "member": "Class org.gradle.kotlin.dsl.precompile.PrecompiledInitScript",
            "acceptation": "Remove old deprecated precompiled kotlin script templates",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.precompile.PrecompiledInitScript",
            "member": "Constructor org.gradle.kotlin.dsl.precompile.PrecompiledInitScript(org.gradle.api.invocation.Gradle)",
            "acceptation": "Remove old deprecated precompiled kotlin script templates",
            "changes": [
                "Constructor has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.precompile.PrecompiledInitScript",
            "member": "Method org.gradle.kotlin.dsl.precompile.PrecompiledInitScript.getFileOperations()",
            "acceptation": "Remove old deprecated precompiled kotlin script templates",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.precompile.PrecompiledInitScript",
            "member": "Method org.gradle.kotlin.dsl.precompile.PrecompiledInitScript.getProcessOperations()",
            "acceptation": "Remove old deprecated precompiled kotlin script templates",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.precompile.PrecompiledProjectScript",
            "member": "Class org.gradle.kotlin.dsl.precompile.PrecompiledProjectScript",
            "acceptation": "Remove old deprecated precompiled kotlin script templates",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.precompile.PrecompiledProjectScript",
            "member": "Constructor org.gradle.kotlin.dsl.precompile.PrecompiledProjectScript(org.gradle.api.Project)",
            "acceptation": "Remove old deprecated precompiled kotlin script templates",
            "changes": [
                "Constructor has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.precompile.PrecompiledProjectScript",
            "member": "Method org.gradle.kotlin.dsl.precompile.PrecompiledProjectScript.buildscript(kotlin.jvm.functions.Function1)",
            "acceptation": "Remove old deprecated precompiled kotlin script templates",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.precompile.PrecompiledProjectScript",
            "member": "Method org.gradle.kotlin.dsl.precompile.PrecompiledProjectScript.plugins(kotlin.jvm.functions.Function1)",
            "acceptation": "Remove old deprecated precompiled kotlin script templates",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.precompile.PrecompiledSettingsScript",
            "member": "Class org.gradle.kotlin.dsl.precompile.PrecompiledSettingsScript",
            "acceptation": "Remove old deprecated precompiled kotlin script templates",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.precompile.PrecompiledSettingsScript",
            "member": "Constructor org.gradle.kotlin.dsl.precompile.PrecompiledSettingsScript(org.gradle.api.initialization.Settings)",
            "acceptation": "Remove old deprecated precompiled kotlin script templates",
            "changes": [
                "Constructor has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.precompile.PrecompiledSettingsScript",
            "member": "Method org.gradle.kotlin.dsl.precompile.PrecompiledSettingsScript.getFileOperations()",
            "acceptation": "Remove old deprecated precompiled kotlin script templates",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.precompile.PrecompiledSettingsScript",
            "member": "Method org.gradle.kotlin.dsl.precompile.PrecompiledSettingsScript.getProcessOperations()",
            "acceptation": "Remove old deprecated precompiled kotlin script templates",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.language.jvm.tasks.ProcessResources",
            "member": "Method org.gradle.language.jvm.tasks.ProcessResources.getDeleter()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask",
            "member": "Method org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask.getFileCollectionFactory()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask",
            "member": "Method org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask.getIncrementalCompilerBuilder()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask",
            "member": "Method org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask.getOperationLoggerFactory()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask",
            "member": "Method org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask.getTaskFileVarFactory()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.language.scala.tasks.BaseScalaCompileOptions",
            "member": "Method org.gradle.language.scala.tasks.BaseScalaCompileOptions.getObjectFactory()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.language.scala.tasks.BaseScalaCompileOptions",
            "member": "Method org.gradle.language.scala.tasks.BaseScalaCompileOptions.setForkOptions(org.gradle.api.tasks.scala.ScalaForkOptions)",
            "acceptation": "Remove deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.language.scala.tasks.BaseScalaCompileOptions",
            "member": "Method org.gradle.language.scala.tasks.BaseScalaCompileOptions.setIncrementalOptions(org.gradle.api.tasks.scala.IncrementalCompileOptions)",
            "acceptation": "Remove deprecated method",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.language.scala.tasks.BaseScalaCompileOptions",
            "member": "Superclass [removed]",
            "acceptation": "Removed deprecated class",
            "changes": [
                "Superclass has been removed"
            ]
        },
        {
            "type": "org.gradle.nativeplatform.tasks.AbstractLinkTask",
            "member": "Method org.gradle.nativeplatform.tasks.AbstractLinkTask.getDeleter()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.nativeplatform.tasks.AbstractLinkTask",
            "member": "Method org.gradle.nativeplatform.tasks.AbstractLinkTask.getOperationLoggerFactory()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.nativeplatform.tasks.CreateStaticLibrary",
            "member": "Method org.gradle.nativeplatform.tasks.CreateStaticLibrary.getOperationLoggerFactory()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.nativeplatform.tasks.InstallExecutable",
            "member": "Method org.gradle.nativeplatform.tasks.InstallExecutable.getFileSystem()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.nativeplatform.tasks.InstallExecutable",
            "member": "Method org.gradle.nativeplatform.tasks.InstallExecutable.getFileSystemOperations()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.nativeplatform.test.xctest.tasks.InstallXCTestBundle",
            "member": "Method org.gradle.nativeplatform.test.xctest.tasks.InstallXCTestBundle.getFileSystem()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.nativeplatform.test.xctest.tasks.InstallXCTestBundle",
            "member": "Method org.gradle.nativeplatform.test.xctest.tasks.InstallXCTestBundle.getFileSystemOperations()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.nativeplatform.test.xctest.tasks.InstallXCTestBundle",
            "member": "Method org.gradle.nativeplatform.test.xctest.tasks.InstallXCTestBundle.getSwiftStdlibToolLocator()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.plugin.devel.GradlePluginDevelopmentExtension",
            "member": "Constructor org.gradle.plugin.devel.GradlePluginDevelopmentExtension(org.gradle.api.Project,org.gradle.api.tasks.SourceSet,org.gradle.api.tasks.SourceSet[])",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Constructor has been removed"
            ]
        },
        {
            "type": "org.gradle.plugin.devel.GradlePluginDevelopmentExtension",
            "member": "Method org.gradle.plugin.devel.GradlePluginDevelopmentExtension.pluginSourceSet(org.gradle.api.tasks.SourceSet)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.plugin.devel.tasks.GeneratePluginDescriptors",
            "member": "Method org.gradle.plugin.devel.tasks.GeneratePluginDescriptors.getDeleter()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.plugins.ear.EarPluginConvention",
            "member": "Class org.gradle.plugins.ear.EarPluginConvention",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.plugins.ear.EarPluginConvention",
            "member": "Constructor org.gradle.plugins.ear.EarPluginConvention()",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Constructor has been removed"
            ]
        },
        {
            "type": "org.gradle.plugins.ear.EarPluginConvention",
            "member": "Method org.gradle.plugins.ear.EarPluginConvention.appDirName(java.lang.String)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.plugins.ear.EarPluginConvention",
            "member": "Method org.gradle.plugins.ear.EarPluginConvention.deploymentDescriptor(groovy.lang.Closure)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.plugins.ear.EarPluginConvention",
            "member": "Method org.gradle.plugins.ear.EarPluginConvention.deploymentDescriptor(org.gradle.api.Action)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.plugins.ear.EarPluginConvention",
            "member": "Method org.gradle.plugins.ear.EarPluginConvention.getAppDirName()",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.plugins.ear.EarPluginConvention",
            "member": "Method org.gradle.plugins.ear.EarPluginConvention.getDeploymentDescriptor()",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.plugins.ear.EarPluginConvention",
            "member": "Method org.gradle.plugins.ear.EarPluginConvention.getGenerateDeploymentDescriptor()",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.plugins.ear.EarPluginConvention",
            "member": "Method org.gradle.plugins.ear.EarPluginConvention.getLibDirName()",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.plugins.ear.EarPluginConvention",
            "member": "Method org.gradle.plugins.ear.EarPluginConvention.libDirName(java.lang.String)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.plugins.ear.EarPluginConvention",
            "member": "Method org.gradle.plugins.ear.EarPluginConvention.setAppDirName(java.lang.String)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.plugins.ear.EarPluginConvention",
            "member": "Method org.gradle.plugins.ear.EarPluginConvention.setDeploymentDescriptor(org.gradle.plugins.ear.descriptor.DeploymentDescriptor)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.plugins.ear.EarPluginConvention",
            "member": "Method org.gradle.plugins.ear.EarPluginConvention.setLibDirName(java.lang.String)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.plugins.ide.api.GeneratorTask",
            "member": "Method org.gradle.plugins.ide.api.GeneratorTask.getInstantiator()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.plugins.ide.eclipse.model.EclipseModel",
            "member": "Method org.gradle.plugins.ide.eclipse.model.EclipseModel.getObjectFactory()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.plugins.ide.eclipse.model.EclipseWtp",
            "member": "Method org.gradle.plugins.ide.eclipse.model.EclipseWtp.getObjectFactory()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.plugins.ide.idea.model.IdeaModule",
            "member": "Method org.gradle.plugins.ide.idea.model.IdeaModule.getTestResourceDirs()",
            "acceptation": "remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.plugins.ide.idea.model.IdeaModule",
            "member": "Method org.gradle.plugins.ide.idea.model.IdeaModule.getTestResources()",
            "acceptation": "remove deprecated API",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.plugins.ide.idea.model.IdeaModule",
            "member": "Method org.gradle.plugins.ide.idea.model.IdeaModule.getTestSourceDirs()",
            "acceptation": "remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.plugins.ide.idea.model.IdeaModule",
            "member": "Method org.gradle.plugins.ide.idea.model.IdeaModule.getTestSources()",
            "acceptation": "remove deprecated API",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.plugins.ide.idea.model.IdeaModule",
            "member": "Method org.gradle.plugins.ide.idea.model.IdeaModule.setTestResourceDirs(java.util.Set)",
            "acceptation": "remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.plugins.ide.idea.model.IdeaModule",
            "member": "Method org.gradle.plugins.ide.idea.model.IdeaModule.setTestSourceDirs(java.util.Set)",
            "acceptation": "remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.plugins.signing.Sign",
            "member": "Method org.gradle.plugins.signing.Sign.getCallbackActionDecorator()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.plugins.signing.Sign",
            "member": "Method org.gradle.plugins.signing.Sign.getFileCollectionFactory()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.process.JavaForkOptions",
            "member": "Method org.gradle.process.JavaForkOptions.getSystemProperties()",
            "acceptation": "Values of returned map can be null",
            "changes": [
                "From non-null returning to null returning breaking change"
            ]
        },
        {
            "type": "org.gradle.process.ProcessExecutionException",
            "member": "Class org.gradle.process.ProcessExecutionException",
            "acceptation": "Introduced public ExecException",
            "changes": [
                "Interface has been added"
            ]
        },
        {
            "type": "org.gradle.process.ProcessExecutionException",
            "member": "Constructor org.gradle.process.ProcessExecutionException(java.lang.String)",
            "acceptation": "Introduced public ExecException",
            "changes": []
        },
        {
            "type": "org.gradle.process.ProcessExecutionException",
            "member": "Constructor org.gradle.process.ProcessExecutionException(java.lang.String,java.lang.Throwable)",
            "acceptation": "Introduced public ExecException",
            "changes": []
        },
        {
            "type": "org.gradle.testing.jacoco.tasks.JacocoReportBase",
            "member": "Method org.gradle.testing.jacoco.tasks.JacocoReportBase.getAntBuilder()",
            "acceptation": "Removed protected method injecting internal class",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.tasks.JacocoReportBase",
            "member": "Method org.gradle.testing.jacoco.tasks.JacocoReportBase.getCallbackActionDecorator()",
            "acceptation": "Removed protected method injecting internal class",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.tasks.JacocoReportBase",
            "member": "Method org.gradle.testing.jacoco.tasks.JacocoReportBase.getInstantiator()",
            "acceptation": "Making all injecting getters abstract",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.util.ClosureBackedAction",
            "member": "Class org.gradle.util.ClosureBackedAction",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.util.ClosureBackedAction",
            "member": "Constructor org.gradle.util.ClosureBackedAction(groovy.lang.Closure)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Constructor has been removed"
            ]
        },
        {
            "type": "org.gradle.util.ClosureBackedAction",
            "member": "Constructor org.gradle.util.ClosureBackedAction(groovy.lang.Closure,int)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Constructor has been removed"
            ]
        },
        {
            "type": "org.gradle.util.ClosureBackedAction",
            "member": "Constructor org.gradle.util.ClosureBackedAction(groovy.lang.Closure,int,boolean)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Constructor has been removed"
            ]
        },
        {
            "type": "org.gradle.util.ClosureBackedAction",
            "member": "Method org.gradle.util.ClosureBackedAction.equals(java.lang.Object)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.ClosureBackedAction",
            "member": "Method org.gradle.util.ClosureBackedAction.execute(java.lang.Object,groovy.lang.Closure)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.ClosureBackedAction",
            "member": "Method org.gradle.util.ClosureBackedAction.getClosure()",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.ClosureBackedAction",
            "member": "Method org.gradle.util.ClosureBackedAction.hashCode()",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.ClosureBackedAction",
            "member": "Method org.gradle.util.ClosureBackedAction.of(groovy.lang.Closure)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils",
            "member": "Class org.gradle.util.CollectionUtils",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils",
            "member": "Constructor org.gradle.util.CollectionUtils()",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Constructor has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils",
            "member": "Method org.gradle.util.CollectionUtils.addAll(java.util.Collection,java.lang.Iterable)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils",
            "member": "Method org.gradle.util.CollectionUtils.addAll(java.util.Collection,java.lang.Object[])",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils",
            "member": "Method org.gradle.util.CollectionUtils.any(java.lang.Iterable,org.gradle.api.specs.Spec)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils",
            "member": "Method org.gradle.util.CollectionUtils.any(java.lang.Object[],org.gradle.api.specs.Spec)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils",
            "member": "Method org.gradle.util.CollectionUtils.asCommandLine(java.lang.Iterable)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils",
            "member": "Method org.gradle.util.CollectionUtils.checkedCast(java.lang.Class,java.util.Collection)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils",
            "member": "Method org.gradle.util.CollectionUtils.collect(java.lang.Iterable,java.util.Collection,org.gradle.api.Transformer)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils",
            "member": "Method org.gradle.util.CollectionUtils.collect(java.lang.Iterable,org.gradle.api.Transformer)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils",
            "member": "Method org.gradle.util.CollectionUtils.collect(java.lang.Object[],org.gradle.api.Transformer)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils",
            "member": "Method org.gradle.util.CollectionUtils.collect(java.util.Set,org.gradle.api.Transformer)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils",
            "member": "Method org.gradle.util.CollectionUtils.collectArray(java.lang.Object[],java.lang.Class,org.gradle.api.Transformer)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils",
            "member": "Method org.gradle.util.CollectionUtils.collectArray(java.lang.Object[],java.lang.Object[],org.gradle.api.Transformer)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils",
            "member": "Method org.gradle.util.CollectionUtils.collectMap(java.lang.Iterable,org.gradle.api.Transformer)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils",
            "member": "Method org.gradle.util.CollectionUtils.collectMap(java.util.Map,java.lang.Iterable,org.gradle.api.Transformer)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils",
            "member": "Method org.gradle.util.CollectionUtils.collectMapValues(java.lang.Iterable,org.gradle.api.Transformer)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils",
            "member": "Method org.gradle.util.CollectionUtils.collectMapValues(java.util.Map,java.lang.Iterable,org.gradle.api.Transformer)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils",
            "member": "Method org.gradle.util.CollectionUtils.compact(java.util.List)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils",
            "member": "Method org.gradle.util.CollectionUtils.diffSetsBy(java.util.Set,java.util.Set,org.gradle.api.Transformer)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils",
            "member": "Method org.gradle.util.CollectionUtils.every(java.lang.Iterable,org.gradle.api.specs.Spec)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils",
            "member": "Method org.gradle.util.CollectionUtils.filter(java.lang.Iterable,java.util.Collection,org.gradle.api.specs.Spec)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils",
            "member": "Method org.gradle.util.CollectionUtils.filter(java.lang.Object[],org.gradle.api.specs.Spec)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils",
            "member": "Method org.gradle.util.CollectionUtils.filter(java.util.List,org.gradle.api.specs.Spec)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils",
            "member": "Method org.gradle.util.CollectionUtils.filter(java.util.Map,java.util.Map,org.gradle.api.specs.Spec)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils",
            "member": "Method org.gradle.util.CollectionUtils.filter(java.util.Map,org.gradle.api.specs.Spec)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils",
            "member": "Method org.gradle.util.CollectionUtils.filter(java.util.Set,org.gradle.api.specs.Spec)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils",
            "member": "Method org.gradle.util.CollectionUtils.findFirst(java.lang.Iterable,org.gradle.api.specs.Spec)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils",
            "member": "Method org.gradle.util.CollectionUtils.findFirst(java.lang.Object[],org.gradle.api.specs.Spec)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils",
            "member": "Method org.gradle.util.CollectionUtils.findSingle(java.lang.Iterable)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils",
            "member": "Method org.gradle.util.CollectionUtils.first(java.lang.Iterable)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils",
            "member": "Method org.gradle.util.CollectionUtils.flattenCollections(java.lang.Class,java.lang.Object[])",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils",
            "member": "Method org.gradle.util.CollectionUtils.flattenCollections(java.lang.Object[])",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils",
            "member": "Method org.gradle.util.CollectionUtils.groupBy(java.lang.Iterable,org.gradle.api.Transformer)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils",
            "member": "Method org.gradle.util.CollectionUtils.inject(java.lang.Object,java.lang.Iterable,org.gradle.api.Action)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils",
            "member": "Method org.gradle.util.CollectionUtils.intersection(java.util.Collection)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils",
            "member": "Method org.gradle.util.CollectionUtils.join(java.lang.String,java.lang.Iterable)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils",
            "member": "Method org.gradle.util.CollectionUtils.join(java.lang.String,java.lang.Object[])",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils",
            "member": "Method org.gradle.util.CollectionUtils.nonEmptyOrNull(java.lang.Iterable)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils",
            "member": "Method org.gradle.util.CollectionUtils.partition(java.lang.Iterable,org.gradle.api.specs.Spec)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils",
            "member": "Method org.gradle.util.CollectionUtils.replace(java.util.List,org.gradle.api.specs.Spec,org.gradle.api.Transformer)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils",
            "member": "Method org.gradle.util.CollectionUtils.single(java.lang.Iterable)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils",
            "member": "Method org.gradle.util.CollectionUtils.sort(java.lang.Iterable)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils",
            "member": "Method org.gradle.util.CollectionUtils.sort(java.lang.Iterable,java.util.Comparator)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils",
            "member": "Method org.gradle.util.CollectionUtils.stringize(java.lang.Iterable,java.util.Collection)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils",
            "member": "Method org.gradle.util.CollectionUtils.stringize(java.util.Collection)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils",
            "member": "Method org.gradle.util.CollectionUtils.toList(java.lang.Iterable)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils",
            "member": "Method org.gradle.util.CollectionUtils.toList(java.lang.Object[])",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils",
            "member": "Method org.gradle.util.CollectionUtils.toList(java.util.Enumeration)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils",
            "member": "Method org.gradle.util.CollectionUtils.toSet(java.lang.Iterable)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils",
            "member": "Method org.gradle.util.CollectionUtils.toStringList(java.lang.Iterable)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils",
            "member": "Method org.gradle.util.CollectionUtils.unpack(java.lang.Iterable)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils$InjectionStep",
            "member": "Class org.gradle.util.CollectionUtils$InjectionStep",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils$InjectionStep",
            "member": "Constructor org.gradle.util.CollectionUtils$InjectionStep(java.lang.Object,java.lang.Object)",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Constructor has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils$InjectionStep",
            "member": "Method org.gradle.util.CollectionUtils$InjectionStep.getItem()",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils$InjectionStep",
            "member": "Method org.gradle.util.CollectionUtils$InjectionStep.getTarget()",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils$SetDiff",
            "member": "Class org.gradle.util.CollectionUtils$SetDiff",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils$SetDiff",
            "member": "Constructor org.gradle.util.CollectionUtils$SetDiff()",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Constructor has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils$SetDiff",
            "member": "Field common",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Field has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils$SetDiff",
            "member": "Field leftOnly",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Field has been removed"
            ]
        },
        {
            "type": "org.gradle.util.CollectionUtils$SetDiff",
            "member": "Field rightOnly",
            "acceptation": "Remove deprecated API",
            "changes": [
                "Field has been removed"
            ]
        },
        {
            "type": "org.gradle.util.ConfigureUtil",
            "member": "Class org.gradle.util.ConfigureUtil",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.util.ConfigureUtil",
            "member": "Constructor org.gradle.util.ConfigureUtil()",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Constructor has been removed"
            ]
        },
        {
            "type": "org.gradle.util.ConfigureUtil",
            "member": "Method org.gradle.util.ConfigureUtil.configure(groovy.lang.Closure,java.lang.Object)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.ConfigureUtil",
            "member": "Method org.gradle.util.ConfigureUtil.configureByMap(java.util.Map,java.lang.Object)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.ConfigureUtil",
            "member": "Method org.gradle.util.ConfigureUtil.configureByMap(java.util.Map,java.lang.Object,java.util.Collection)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.ConfigureUtil",
            "member": "Method org.gradle.util.ConfigureUtil.configureSelf(groovy.lang.Closure,java.lang.Object)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.ConfigureUtil",
            "member": "Method org.gradle.util.ConfigureUtil.configureSelf(groovy.lang.Closure,java.lang.Object,org.gradle.internal.metaobject.ConfigureDelegate)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.ConfigureUtil",
            "member": "Method org.gradle.util.ConfigureUtil.configureUsing(groovy.lang.Closure)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.ConfigureUtil$IncompleteInputException",
            "member": "Class org.gradle.util.ConfigureUtil$IncompleteInputException",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.util.ConfigureUtil$IncompleteInputException",
            "member": "Constructor org.gradle.util.ConfigureUtil$IncompleteInputException(java.lang.String,java.util.Collection)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Constructor has been removed"
            ]
        },
        {
            "type": "org.gradle.util.ConfigureUtil$IncompleteInputException",
            "member": "Method org.gradle.util.ConfigureUtil$IncompleteInputException.getMissingKeys()",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.ConfigureUtil$WrappedConfigureAction",
            "member": "Class org.gradle.util.ConfigureUtil$WrappedConfigureAction",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.util.ConfigureUtil$WrappedConfigureAction",
            "member": "Method org.gradle.util.ConfigureUtil$WrappedConfigureAction.getConfigureClosure()",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.DistributionLocator",
            "member": "Class org.gradle.util.DistributionLocator",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.util.DistributionLocator",
            "member": "Constructor org.gradle.util.DistributionLocator()",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Constructor has been removed"
            ]
        },
        {
            "type": "org.gradle.util.DistributionLocator",
            "member": "Method org.gradle.util.DistributionLocator.getDistributionFor(org.gradle.util.GradleVersion)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.DistributionLocator",
            "member": "Method org.gradle.util.DistributionLocator.getDistributionFor(org.gradle.util.GradleVersion,java.lang.String)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GFileUtils",
            "member": "Class org.gradle.util.GFileUtils",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GFileUtils",
            "member": "Constructor org.gradle.util.GFileUtils()",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Constructor has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GFileUtils",
            "member": "Method org.gradle.util.GFileUtils.checksum(java.io.File,java.util.zip.Checksum)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GFileUtils",
            "member": "Method org.gradle.util.GFileUtils.copyDirectory(java.io.File,java.io.File)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GFileUtils",
            "member": "Method org.gradle.util.GFileUtils.copyFile(java.io.File,java.io.File)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GFileUtils",
            "member": "Method org.gradle.util.GFileUtils.copyURLToFile(java.net.URL,java.io.File)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GFileUtils",
            "member": "Method org.gradle.util.GFileUtils.deleteDirectory(java.io.File)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GFileUtils",
            "member": "Method org.gradle.util.GFileUtils.deleteQuietly(java.io.File)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GFileUtils",
            "member": "Method org.gradle.util.GFileUtils.forceDelete(java.io.File)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GFileUtils",
            "member": "Method org.gradle.util.GFileUtils.listFiles(java.io.File,java.lang.String[],boolean)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GFileUtils",
            "member": "Method org.gradle.util.GFileUtils.mkdirs(java.io.File)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GFileUtils",
            "member": "Method org.gradle.util.GFileUtils.moveDirectory(java.io.File,java.io.File)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GFileUtils",
            "member": "Method org.gradle.util.GFileUtils.moveExistingDirectory(java.io.File,java.io.File)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GFileUtils",
            "member": "Method org.gradle.util.GFileUtils.moveExistingFile(java.io.File,java.io.File)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GFileUtils",
            "member": "Method org.gradle.util.GFileUtils.moveFile(java.io.File,java.io.File)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GFileUtils",
            "member": "Method org.gradle.util.GFileUtils.openInputStream(java.io.File)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GFileUtils",
            "member": "Method org.gradle.util.GFileUtils.parentMkdirs(java.io.File)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GFileUtils",
            "member": "Method org.gradle.util.GFileUtils.readFile(java.io.File)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GFileUtils",
            "member": "Method org.gradle.util.GFileUtils.readFile(java.io.File,java.lang.String)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GFileUtils",
            "member": "Method org.gradle.util.GFileUtils.readFileQuietly(java.io.File)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GFileUtils",
            "member": "Method org.gradle.util.GFileUtils.relativePathOf(java.io.File,java.io.File)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GFileUtils",
            "member": "Method org.gradle.util.GFileUtils.tail(java.io.File,int)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GFileUtils",
            "member": "Method org.gradle.util.GFileUtils.toPaths(java.util.Collection)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GFileUtils",
            "member": "Method org.gradle.util.GFileUtils.touch(java.io.File)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GFileUtils",
            "member": "Method org.gradle.util.GFileUtils.touchExisting(java.io.File)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GFileUtils",
            "member": "Method org.gradle.util.GFileUtils.writeFile(java.lang.String,java.io.File)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GFileUtils",
            "member": "Method org.gradle.util.GFileUtils.writeFile(java.lang.String,java.io.File,java.lang.String)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GFileUtils$TailReadingException",
            "member": "Class org.gradle.util.GFileUtils$TailReadingException",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GFileUtils$TailReadingException",
            "member": "Constructor org.gradle.util.GFileUtils$TailReadingException(java.lang.Throwable)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Constructor has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GUtil",
            "member": "Class org.gradle.util.GUtil",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GUtil",
            "member": "Constructor org.gradle.util.GUtil()",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Constructor has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GUtil",
            "member": "Method org.gradle.util.GUtil.addMaps(java.util.Map,java.util.Map)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GUtil",
            "member": "Method org.gradle.util.GUtil.addToCollection(java.util.Collection,boolean,java.lang.Iterable)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GUtil",
            "member": "Method org.gradle.util.GUtil.addToCollection(java.util.Collection,boolean,java.lang.Iterable[])",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GUtil",
            "member": "Method org.gradle.util.GUtil.addToCollection(java.util.Collection,java.lang.Iterable)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GUtil",
            "member": "Method org.gradle.util.GUtil.addToCollection(java.util.Collection,java.lang.Iterable[])",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GUtil",
            "member": "Method org.gradle.util.GUtil.addToMap(java.util.Map,java.util.Map)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GUtil",
            "member": "Method org.gradle.util.GUtil.asPath(java.lang.Iterable)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GUtil",
            "member": "Method org.gradle.util.GUtil.caseInsensitive()",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GUtil",
            "member": "Method org.gradle.util.GUtil.collectionize(java.lang.Object)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GUtil",
            "member": "Method org.gradle.util.GUtil.elvis(java.lang.Object,java.lang.Object)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GUtil",
            "member": "Method org.gradle.util.GUtil.endsWith(java.lang.CharSequence,java.lang.CharSequence)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GUtil",
            "member": "Method org.gradle.util.GUtil.flatten(java.lang.Object[],java.util.Collection)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GUtil",
            "member": "Method org.gradle.util.GUtil.flatten(java.lang.Object[],java.util.Collection,boolean)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GUtil",
            "member": "Method org.gradle.util.GUtil.flatten(java.util.Collection)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GUtil",
            "member": "Method org.gradle.util.GUtil.flatten(java.util.Collection,boolean)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GUtil",
            "member": "Method org.gradle.util.GUtil.flatten(java.util.Collection,java.util.Collection)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GUtil",
            "member": "Method org.gradle.util.GUtil.flatten(java.util.Collection,java.util.Collection,boolean)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GUtil",
            "member": "Method org.gradle.util.GUtil.flatten(java.util.Collection,java.util.Collection,boolean,boolean)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GUtil",
            "member": "Method org.gradle.util.GUtil.flattenElements(java.lang.Object[])",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GUtil",
            "member": "Method org.gradle.util.GUtil.getOrDefault(java.lang.Object,org.gradle.internal.Factory)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GUtil",
            "member": "Method org.gradle.util.GUtil.isSecureUrl(java.net.URI)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GUtil",
            "member": "Method org.gradle.util.GUtil.isTrue(java.lang.Object)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GUtil",
            "member": "Method org.gradle.util.GUtil.last(java.util.Comparator,java.lang.Object)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GUtil",
            "member": "Method org.gradle.util.GUtil.loadProperties(java.io.File)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GUtil",
            "member": "Method org.gradle.util.GUtil.loadProperties(java.io.InputStream)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GUtil",
            "member": "Method org.gradle.util.GUtil.loadProperties(java.net.URL)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GUtil",
            "member": "Method org.gradle.util.GUtil.map(java.lang.Object[])",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GUtil",
            "member": "Method org.gradle.util.GUtil.prefix(java.lang.String,java.util.Collection)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GUtil",
            "member": "Method org.gradle.util.GUtil.saveProperties(java.util.Properties,java.io.File)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GUtil",
            "member": "Method org.gradle.util.GUtil.saveProperties(java.util.Properties,java.io.OutputStream)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GUtil",
            "member": "Method org.gradle.util.GUtil.serialize(java.lang.Object)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GUtil",
            "member": "Method org.gradle.util.GUtil.serialize(java.lang.Object,java.io.OutputStream)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GUtil",
            "member": "Method org.gradle.util.GUtil.toCamelCase(java.lang.CharSequence)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GUtil",
            "member": "Method org.gradle.util.GUtil.toConstant(java.lang.CharSequence)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GUtil",
            "member": "Method org.gradle.util.GUtil.toEnum(java.lang.Class,java.lang.Object)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GUtil",
            "member": "Method org.gradle.util.GUtil.toEnumSet(java.lang.Class,java.lang.Iterable)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GUtil",
            "member": "Method org.gradle.util.GUtil.toEnumSet(java.lang.Class,java.lang.Object[])",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GUtil",
            "member": "Method org.gradle.util.GUtil.toLowerCamelCase(java.lang.CharSequence)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GUtil",
            "member": "Method org.gradle.util.GUtil.toSecureUrl(java.net.URI)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GUtil",
            "member": "Method org.gradle.util.GUtil.toString(java.lang.Iterable)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GUtil",
            "member": "Method org.gradle.util.GUtil.toWords(java.lang.CharSequence)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GUtil",
            "member": "Method org.gradle.util.GUtil.toWords(java.lang.CharSequence,char)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GUtil",
            "member": "Method org.gradle.util.GUtil.uncheckedCall(java.util.concurrent.Callable)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GradleVersion",
            "member": "Field RESOURCE_NAME",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Field has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GradleVersion",
            "member": "Field URL",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Field has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GradleVersion",
            "member": "Field VERSION_NUMBER_PROPERTY",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Field has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GradleVersion",
            "member": "Field VERSION_OVERRIDE_VAR",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Field has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GradleVersion",
            "member": "Method org.gradle.util.GradleVersion.getBuildTime()",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GradleVersion",
            "member": "Method org.gradle.util.GradleVersion.getMajorVersion()",
            "acceptation": "No need to incubate",
            "changes": [
                "Method added to public class",
                "Abstract method has been added to this class"
            ]
        },
        {
            "type": "org.gradle.util.GradleVersion",
            "member": "Method org.gradle.util.GradleVersion.getNextMajor()",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GradleVersion",
            "member": "Method org.gradle.util.GradleVersion.getRevision()",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.GradleVersion",
            "member": "Method org.gradle.util.GradleVersion.isValid()",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.NameMatcher",
            "member": "Class org.gradle.util.NameMatcher",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.util.NameMatcher",
            "member": "Constructor org.gradle.util.NameMatcher()",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Constructor has been removed"
            ]
        },
        {
            "type": "org.gradle.util.NameMatcher",
            "member": "Method org.gradle.util.NameMatcher.find(java.lang.String,java.util.Collection)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.NameMatcher",
            "member": "Method org.gradle.util.NameMatcher.find(java.lang.String,java.util.Map)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.NameMatcher",
            "member": "Method org.gradle.util.NameMatcher.formatErrorMessage(java.lang.String,java.lang.Object)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.NameMatcher",
            "member": "Method org.gradle.util.NameMatcher.getCandidates()",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.NameMatcher",
            "member": "Method org.gradle.util.NameMatcher.getMatches()",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.NameValidator",
            "member": "Class org.gradle.util.NameValidator",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.util.NameValidator",
            "member": "Method org.gradle.util.NameValidator.validate(java.lang.String,java.lang.String,java.lang.String)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.RelativePathUtil",
            "member": "Class org.gradle.util.RelativePathUtil",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.util.RelativePathUtil",
            "member": "Constructor org.gradle.util.RelativePathUtil()",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Constructor has been removed"
            ]
        },
        {
            "type": "org.gradle.util.RelativePathUtil",
            "member": "Method org.gradle.util.RelativePathUtil.relativePath(java.io.File,java.io.File)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.SingleMessageLogger",
            "member": "Class org.gradle.util.SingleMessageLogger",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.util.SingleMessageLogger",
            "member": "Constructor org.gradle.util.SingleMessageLogger()",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Constructor has been removed"
            ]
        },
        {
            "type": "org.gradle.util.TextUtil",
            "member": "Class org.gradle.util.TextUtil",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.util.TextUtil",
            "member": "Constructor org.gradle.util.TextUtil()",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Constructor has been removed"
            ]
        },
        {
            "type": "org.gradle.util.TextUtil",
            "member": "Method org.gradle.util.TextUtil.camelToKebabCase(java.lang.String)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.TextUtil",
            "member": "Method org.gradle.util.TextUtil.containsWhitespace(java.lang.String)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.TextUtil",
            "member": "Method org.gradle.util.TextUtil.convertLineSeparators(java.lang.String,java.lang.String)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.TextUtil",
            "member": "Method org.gradle.util.TextUtil.convertLineSeparatorsToUnix(java.lang.String)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.TextUtil",
            "member": "Method org.gradle.util.TextUtil.escapeString(java.lang.Object)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.TextUtil",
            "member": "Method org.gradle.util.TextUtil.getPlatformLineSeparator()",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.TextUtil",
            "member": "Method org.gradle.util.TextUtil.getUnixLineSeparator()",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.TextUtil",
            "member": "Method org.gradle.util.TextUtil.getWindowsLineSeparator()",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.TextUtil",
            "member": "Method org.gradle.util.TextUtil.indent(java.lang.String,java.lang.String)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.TextUtil",
            "member": "Method org.gradle.util.TextUtil.minus(java.lang.String,java.lang.String)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.TextUtil",
            "member": "Method org.gradle.util.TextUtil.normaliseFileAndLineSeparators(java.lang.String)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.TextUtil",
            "member": "Method org.gradle.util.TextUtil.normaliseFileSeparators(java.lang.String)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.TextUtil",
            "member": "Method org.gradle.util.TextUtil.normaliseLineSeparators(java.lang.String)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.TextUtil",
            "member": "Method org.gradle.util.TextUtil.replaceLineSeparatorsOf(java.lang.CharSequence,java.lang.String)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.TextUtil",
            "member": "Method org.gradle.util.TextUtil.shorterOf(java.lang.String,java.lang.String)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.TextUtil",
            "member": "Method org.gradle.util.TextUtil.toLowerCaseLocaleSafe(java.lang.String)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.TextUtil",
            "member": "Method org.gradle.util.TextUtil.toPlatformLineSeparators(java.lang.String)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.VersionNumber",
            "member": "Class org.gradle.util.VersionNumber",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.util.VersionNumber",
            "member": "Constructor org.gradle.util.VersionNumber(int,int,int,int,java.lang.String)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Constructor has been removed"
            ]
        },
        {
            "type": "org.gradle.util.VersionNumber",
            "member": "Constructor org.gradle.util.VersionNumber(int,int,int,java.lang.String)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Constructor has been removed"
            ]
        },
        {
            "type": "org.gradle.util.VersionNumber",
            "member": "Field UNKNOWN",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Field has been removed"
            ]
        },
        {
            "type": "org.gradle.util.VersionNumber",
            "member": "Method org.gradle.util.VersionNumber.compareTo(java.lang.Object)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.VersionNumber",
            "member": "Method org.gradle.util.VersionNumber.compareTo(org.gradle.util.VersionNumber)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.VersionNumber",
            "member": "Method org.gradle.util.VersionNumber.equals(java.lang.Object)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.VersionNumber",
            "member": "Method org.gradle.util.VersionNumber.getBaseVersion()",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.VersionNumber",
            "member": "Method org.gradle.util.VersionNumber.getMajor()",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.VersionNumber",
            "member": "Method org.gradle.util.VersionNumber.getMicro()",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.VersionNumber",
            "member": "Method org.gradle.util.VersionNumber.getMinor()",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.VersionNumber",
            "member": "Method org.gradle.util.VersionNumber.getPatch()",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.VersionNumber",
            "member": "Method org.gradle.util.VersionNumber.getQualifier()",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.VersionNumber",
            "member": "Method org.gradle.util.VersionNumber.hashCode()",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.VersionNumber",
            "member": "Method org.gradle.util.VersionNumber.parse(java.lang.String)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.VersionNumber",
            "member": "Method org.gradle.util.VersionNumber.scheme()",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.VersionNumber",
            "member": "Method org.gradle.util.VersionNumber.toString()",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.VersionNumber",
            "member": "Method org.gradle.util.VersionNumber.version(int)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.VersionNumber",
            "member": "Method org.gradle.util.VersionNumber.version(int,int)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.VersionNumber",
            "member": "Method org.gradle.util.VersionNumber.withPatchNumber()",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.VersionNumber$Scheme",
            "member": "Class org.gradle.util.VersionNumber$Scheme",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.util.VersionNumber$Scheme",
            "member": "Method org.gradle.util.VersionNumber$Scheme.format(org.gradle.util.VersionNumber)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.VersionNumber$Scheme",
            "member": "Method org.gradle.util.VersionNumber$Scheme.parse(java.lang.String)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.WrapUtil",
            "member": "Class org.gradle.util.WrapUtil",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.util.WrapUtil",
            "member": "Constructor org.gradle.util.WrapUtil()",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Constructor has been removed"
            ]
        },
        {
            "type": "org.gradle.util.WrapUtil",
            "member": "Method org.gradle.util.WrapUtil.toArray(java.lang.Object[])",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.WrapUtil",
            "member": "Method org.gradle.util.WrapUtil.toDomainObjectSet(java.lang.Class,java.lang.Object[])",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.WrapUtil",
            "member": "Method org.gradle.util.WrapUtil.toLinkedSet(java.lang.Object[])",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.WrapUtil",
            "member": "Method org.gradle.util.WrapUtil.toList(java.lang.Iterable)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.WrapUtil",
            "member": "Method org.gradle.util.WrapUtil.toList(java.lang.Object[])",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.WrapUtil",
            "member": "Method org.gradle.util.WrapUtil.toMap(java.lang.Object,java.lang.Object)",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.WrapUtil",
            "member": "Method org.gradle.util.WrapUtil.toSet(java.lang.Object[])",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.WrapUtil",
            "member": "Method org.gradle.util.WrapUtil.toSortedSet(java.lang.Object[])",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.util.WrapUtil",
            "member": "Method org.gradle.util.WrapUtil.toSortedSet(java.util.Comparator,java.lang.Object[])",
            "acceptation": "Deprecated in 8.x",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.workers.IsolationMode",
            "member": "Class org.gradle.workers.IsolationMode",
            "acceptation": "Removed deprecated class",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.workers.IsolationMode",
            "member": "Field AUTO",
            "acceptation": "Removed deprecated class",
            "changes": [
                "Field has been removed"
            ]
        },
        {
            "type": "org.gradle.workers.IsolationMode",
            "member": "Field CLASSLOADER",
            "acceptation": "Removed deprecated class",
            "changes": [
                "Field has been removed"
            ]
        },
        {
            "type": "org.gradle.workers.IsolationMode",
            "member": "Field NONE",
            "acceptation": "Removed deprecated class",
            "changes": [
                "Field has been removed"
            ]
        },
        {
            "type": "org.gradle.workers.IsolationMode",
            "member": "Field PROCESS",
            "acceptation": "Removed deprecated class",
            "changes": [
                "Field has been removed"
            ]
        },
        {
            "type": "org.gradle.workers.IsolationMode",
            "member": "Method org.gradle.workers.IsolationMode.valueOf(java.lang.String)",
            "acceptation": "Removed deprecated class",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.workers.IsolationMode",
            "member": "Method org.gradle.workers.IsolationMode.values()",
            "acceptation": "Removed deprecated class",
            "changes": [
                "Method has been removed"
            ]
        }
    ]
}
