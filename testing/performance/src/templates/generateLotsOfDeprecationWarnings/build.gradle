/*
 * Copyright 2018 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

@groovy.transform.CompileStatic
void createDeprecations(int iterations) {
    for (int i = 0; i < iterations; i++) {
        // every 10th deprecation should have a different message
        if (i % 10 == 0) {
            nagUserOfDeprecated("Some unique deprecation No #\$i")
        }
        nagUserOfDeprecated("Some repetitive Deprecation")
    }
}


@groovy.transform.CompileStatic
void nagUserOfDeprecated(String thing) {
    org.gradle.internal.deprecation.DeprecationLogger.deprecate(thing).willBecomeAnErrorInGradle9().undocumented().nagUser();

}

// This generates 1 deprecation 10k times and 1k unique deprecations
createDeprecations(10000)
